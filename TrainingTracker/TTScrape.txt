

BEGIN
  FOR events IN (
    SELECT "EVENT_NAME", "DISCRIPTION" ,"EVENT_TYPE","EVENT_RESOURCE_LINK","TOWARDS_PLA_FAMILY","TOWARDS_PLA_AREA" ,"OWNED_BY", "SESSION_MODE", "REGION", "COUNTRY","LOCATION","SESSION_STATUS",
    "SCHEDULED_TIME","SCHEDULED_ENDTIME"
	FROM EVENTSCHEDULE  WHERE EVENT_ID  IN (
	SELECT TRAINING_ID  FROM TTESESSIONS_ATTENDEE  WHERE ATTENDEE_ID = :APP_USER ;
	UNION
	SELECT EVENT_ID FROM EVENTSCHEDULE WHERE EVENT_VISIBILITY = 'open')
	ORDER BY SCHEDULED_TIME DESC ;
  )
  LOOP
    DBMS_OUTPUT.PUT_LINE ('Name = ' || events.EVENT_NAME || ', discription = ' || events.DISCRIPTION);
  END LOOP;
END;
/




"EVENTSCHEDULE" ("EVENT_ID","EVENT_NAME", "DISCRIPTION", "PRESENTOR1", "PRESENTOR2", "PRESENTOR3", "PRESENTOR4", "PRESENTOR_5", "EVENT_TYPE","EVENT_VISIBILITY","EVENT_RESOURCE_LINK","TOWARDS_PLA_FAMILY","TOWARDS_PLA_AREA", "SESSION_STARTDATEL", "SESSION_ENDDATEL", "SESSION_STARTTIMEL", "SESSION_ENDTIMEL", "OWNED_BY", "SESSION_MODE", "REGION", "COUNTRY","LOCATION","SESSION_STATUS","SCHEDULED_TIME",SCHEDULED_ENDTIME,"DAYS","HOURS_PER_DAY")
  
INITCAP(to_char(SESSION_STARTDATEL,'MONTH DD, YYYY'))
  
SELECT * FROM EVENTSCHEDULE  WHERE EVENT_ID  IN (
SELECT EVENT_ID FROM myEventId
UNION
SELECT EVENT_ID FROM EVENTSCHEDULE WHERE EVENT_VISIBILITY = 'open')
ORDER BY SCHEDULED_TIME DESC ;

INITCAP(to_char(SCHEDULED_TIME,'MONTH DD, YYYY')) ||' ' ||to_char(SCHEDULED_TIME,'HH24:MI') || '-' || to_char(SCHEDULED_ENDTIME,'HH24:MI')  || '   ' || INITCAP(to_char(SCHEDULED_ENDTIME,'MONTH DD, YYYY')) ||' ' ||to_char(SCHEDULED_TIME,'HH24:MI') || '-' || to_char(SCHEDULED_ENDTIME,'HH24:MI')























SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION

FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION 
FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID='SCOTT.JESSE@ORACLE.COM'
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID 
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID='SCOTT.JESSE@ORACLE.COM'
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
				AND START_DATE
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID  ) 
GROUP BY ATTENDEE_ID)  TABLE2

ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y

WHERE X.EMP_ID = Y.ATTENDEE_ID 

group by DURATION,DESIGNATION,EMP_ID

ORDER BY DESIGNATION;





















SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH MANAGER_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
FROM TT_EMPLOYEE
START WITH MANAGER_ID= :P7_MANAGER_ID
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
;



















SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR

FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION , TABLE2.QTR

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID='SCOTT.JESSE@ORACLE.COM'
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID ,  TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID='SCOTT.JESSE@ORACLE.COM'
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND WHERE  TO_CHAR(A.FROM_DATETIMEL	, 'YYYY') = 2016 ) 
GROUP BY ATTENDEE_ID)  TABLE2

ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y

WHERE X.EMP_ID = Y.ATTENDEE_ID 

group by DURATION,DESIGNATION,EMP_ID

ORDER BY DESIGNATION;




---------------------------------------------


SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR

FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION , TABLE2.QTR

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID='SCOTT.JESSE@ORACLE.COM'
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID='SCOTT.JESSE@ORACLE.COM'
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'YYYY') = 2016 ) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2

ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y

WHERE X.EMP_ID = Y.ATTENDEE_ID 

group by DURATION,DESIGNATION,EMP_ID,QTR

ORDER BY DESIGNATION;



select TRAINING_ID ,SESSION_ID , TO_CHAR(FROM_DATETIMEL	, 'YYYY')  from TTEVENT_SESSIONS;



















-----------------------------------------------------------------------------------------------------------


SELECT * FROM (
SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 4 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID='SHRIKANT.GAVALI@ORACLE.COM'
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID='SHRIKANT.GAVALI@ORACLE.COM'
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'YYYY') = 2016 ) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 4
group by DURATION,DESIGNATION,EMP_ID,QTR

 UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 2 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID='SHRIKANT.GAVALI@ORACLE.COM'
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID='SHRIKANT.GAVALI@ORACLE.COM'
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'YYYY') = 2016 ) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 2
group by DURATION,DESIGNATION,EMP_ID,QTR 

 UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 1 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID='SHRIKANT.GAVALI@ORACLE.COM'
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID='SHRIKANT.GAVALI@ORACLE.COM'
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'YYYY') = 2016 ) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 1
group by DURATION,DESIGNATION,EMP_ID,QTR 

 UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 3 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID='SHRIKANT.GAVALI@ORACLE.COM'
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID='SHRIKANT.GAVALI@ORACLE.COM'
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'YYYY') = 2016 ) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 3
group by DURATION,DESIGNATION,EMP_ID,QTR 
)

ORDER BY DESIGNATION,NAME,QTR







































SELECT * FROM (
SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 4 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID= :P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID= :P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'Q') = 4 ) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 4
group by DURATION,DESIGNATION,EMP_ID,QTR

 UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 2 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID= :P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID= :P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'Q') = 2 ) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 2
group by DURATION,DESIGNATION,EMP_ID,QTR 

 UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 1 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID= :P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID= :P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'Q') = 1) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 1
group by DURATION,DESIGNATION,EMP_ID,QTR 

 UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 3 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID= :P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID= :P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'Q') = 3) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 3
group by DURATION,DESIGNATION,EMP_ID,QTR 
)

ORDER BY DESIGNATION,NAME,QTR




























 to_date('01-06-' || :fy,'dd-mm-yyyy'),  ADD_MONTHS(to_date('01-06-'|| :fy,'dd-mm-yyyy'),12)
 
 
 
 
 

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION

FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION 
FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID 
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID=:P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') and ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),12)  ))
GROUP BY ATTENDEE_ID)  TABLE2

ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y

WHERE X.EMP_ID = Y.ATTENDEE_ID 

group by DURATION,DESIGNATION,EMP_ID

ORDER BY DESIGNATION,NAME;



------------------------------------------------------------------------------------------------------------------------------------------------




SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , B.TRAINING_ID , B.SESSION_ID,  A.FROM_DATETIMEL
FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID=:P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
				                        ) 
                               WHERE LEAF=  1
                                        )
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12)  AND to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')) 


=======

SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) , A.INTERVAL AS HOURS , B.ATTENDEE_ID , B.TRAINING_ID , B.SESSION_ID,  A.FROM_DATETIMEL , TO_CHAR(FROM_DATETIMEL, 'MON') 
FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
WHERE A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID 
AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12)  AND to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')  ) 



ORDER BY  FROM_DATETIMEL, TRAINING_ID , SESSION_ID ;







SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION

FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION 
FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID 
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID=:P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') and ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),12)  ))
GROUP BY ATTENDEE_ID)  TABLE2

ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y

WHERE X.EMP_ID = Y.ATTENDEE_ID 

group by DURATION,DESIGNATION,EMP_ID

ORDER BY DESIGNATION,NAME;




































SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 4 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID= :P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID= :P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'Q') = 4 ) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 4
group by DURATION,DESIGNATION,EMP_ID,QTR




































SELECT * FROM (
SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 4 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID= :P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID= :P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'Q') = 4 ) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 4
group by DURATION,DESIGNATION,EMP_ID,QTR

 UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 2 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID= :P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID= :P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'Q') = 2 ) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 2
group by DURATION,DESIGNATION,EMP_ID,QTR 

 UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 1 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID= :P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID= :P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'Q') = 1) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 1
group by DURATION,DESIGNATION,EMP_ID,QTR 

 UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 3 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID= :P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID= :P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'Q') = 3) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 3
group by DURATION,DESIGNATION,EMP_ID,QTR 
)

ORDER BY DESIGNATION,NAME,QTR
































SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) , A.INTERVAL AS HOURS , B.ATTENDEE_ID , B.TRAINING_ID , B.SESSION_ID,  A.FROM_DATETIMEL , TO_CHAR(FROM_DATETIMEL, 'MON') 
FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
WHERE A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12)  AND to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')  ) 
ORDER BY    
CASE    WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8) THEN 1
        WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11) THEN 2
        WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2) THEN 3
        ELSE 4
END DESC ,TRAINING_ID , SESSION_ID ;




SELECT NAME, HOURS, FROM, QTR (
SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) AS HOURS  ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION , QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 4 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID= :P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID= :P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'Q') = 4 ) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 4
group by DURATION,DESIGNATION,EMP_ID,QTR

 UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 2 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID= :P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID= :P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'Q') = 2 ) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 2
group by DURATION,DESIGNATION,EMP_ID,QTR 

 UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 1 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID= :P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID= :P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'Q') = 1) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 1
group by DURATION,DESIGNATION,EMP_ID,QTR 

 UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 3 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID= :P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID= :P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'Q') = 3) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 3
group by DURATION,DESIGNATION,EMP_ID,QTR 
)

pivot 
(
   QTR
   for QTR in (1 AS Q1 ,2 AS Q2,3 AS Q3,4 AS Q4)
)
ORDER BY DESIGNATION,NAME



































 
SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) AS HOURS  ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION , QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 4 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID= :P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , TO_CHAR(A.FROM_DATETIMEL	, 'Q') AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID= :P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND TO_CHAR(A.FROM_DATETIMEL , 'Q') = 4 ) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 4
group by DURATION,DESIGNATION,EMP_ID,QTR






SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION

FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION 
FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1)) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID 
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID 
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF, LEVEL AS D
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID=:P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1))
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')  )
AND 
)
GROUP BY ATTENDEE_ID)  TABLE2

ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y

WHERE X.EMP_ID = Y.ATTENDEE_ID 

group by DURATION,DESIGNATION,EMP_ID

ORDER BY DESIGNATION,NAME;








CASE    WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8) THEN 1
        WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11) THEN 2
        WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2) THEN 3
        WHEN  EXTRACT(month FROM FROM_DATETIMEL) IN (3, 4, 5) THEN  4
END 









SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION

FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION 
FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1)) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID 
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID 
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF, LEVEL AS D
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID=:P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1))
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')  )

)
GROUP BY ATTENDEE_ID)  TABLE2

ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y

WHERE X.EMP_ID = Y.ATTENDEE_ID 

group by DURATION,DESIGNATION,EMP_ID

ORDER BY DESIGNATION,NAME;





















 WITH pivot_data AS (
SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 3 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1) ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , CASE    WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8) THEN 1
        WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11) THEN 2
        WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2) THEN 3
        WHEN  EXTRACT(month FROM FROM_DATETIMEL) IN (3, 4, 5) THEN  4
		END  AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF, LEVEL AS D
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID=:P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1))
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')) AND  EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2)) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 3
group by DURATION,DESIGNATION,EMP_ID,QTR  

UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 1 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1) ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  ,
				 CASE    
					WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8) THEN 1
					WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11) THEN 2
					WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2) THEN 3
					WHEN  EXTRACT(month FROM FROM_DATETIMEL) IN (3, 4, 5) THEN  4
				 END  AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF, LEVEL AS D
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID=:P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1))
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')) AND EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8)) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 1
group by DURATION,DESIGNATION,EMP_ID,QTR 

UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 2 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1)) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , CASE    WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8) THEN 1
        WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11) THEN 2
        WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2) THEN 3
        WHEN  EXTRACT(month FROM FROM_DATETIMEL) IN (3, 4, 5) THEN  4
		END  AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF, LEVEL AS D
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID=:P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1))
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')) AND EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11)) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 2
group by DURATION,DESIGNATION,EMP_ID,QTR 

UNION ALL

				SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
				FROM TT_EMPLOYEE X ,(
				SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 4 ) as QTR 

				FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
									 FROM TT_EMPLOYEE
									 START WITH MANAGER_ID=:P8_MANAGER_ID
									 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
									 ) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1) ) TABLE1 
				FULL OUTER JOIN 
					 (
					 
					 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
					 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , CASE    WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8) THEN 1
						WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11) THEN 2
						WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2) THEN 3
						WHEN  EXTRACT(month FROM FROM_DATETIMEL) IN (3, 4, 5) THEN  4
						END  AS QTR
								FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
								WHERE  B.ATTENDEE_ID in (
											SELECT EMP_ID  
											FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF, LEVEL AS D
											FROM TT_EMPLOYEE
											START WITH MANAGER_ID=:P8_MANAGER_ID
											CONNECT BY MANAGER_ID = PRIOR EMP_ID 
										) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1))
				AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')) AND EXTRACT(month FROM FROM_DATETIMEL) IN (3, 4, 5)  ) 
				GROUP BY ATTENDEE_ID  , QTR )  TABLE2
				ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
				WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 4
				group by DURATION,DESIGNATION,EMP_ID,QTR
 )
  SELECT *
  FROM   pivot_data
  PIVOT (
   SUM(HOURS)	
   for QTR in (1 as "FYQ1",2 as "FYQ2",3 as "FYQ3" ,4 as "FYQ4")
)
ORDER BY DESIGNATION































SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION , Y.MGR_ID,Y.D
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID 
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID 
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF, LEVEL AS D
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID=:P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1)
				AND A.TRAINING_ID = B.TRAINING_ID 
				AND A.SESSION_ID = B.SESSION_ID 
				AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')  )

	)
	GROUP BY ATTENDEE_ID)  TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y

WHERE X.EMP_ID = Y.ATTENDEE_ID 
group by DURATION,DESIGNATION,EMP_ID , MGR_ID,D
ORDER BY MGR_ID,DESIGNATION,NAME;




---------------------

select rpad('*',2*level,'*') || ename name, 
sal, 
(select sum(e2.sal) 
 from emp e2 
 start with e2.empno = e1.empno 
 connect by prior e2.mgr = e2.empno) sum_sal 
 from emp e1 
 start with e1.mgr is null 
 connect by prior empno = mgr; 



SELECT rpad('*',2*LEVEL,'*') || EMP_ID Name,
(SELECT  SUM(DURATION)
FROM (
 
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH MANAGER_ID= :P8_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')  )
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2
 START WITH  with E2.ATTENDEE_ID = E1.EMP_ID 
 CONNECT BY PRIOR E2.MANAGER_ID = E2.ATTENDEE_ID)  
 
 SUM_DURATION 
 FROM TT_EMPLOYEE E1
 START WITH E1.MANAGER_ID is null
  CONNECT BY MANAGER_ID=  PRIOR EMP_ID ;
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  SELECT rpad('*',2*LEVEL,'*') || EMP_ID Name, ( 

SELECT  SUM(DURATION)
FROM (
	SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
	FROM (

	SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
	FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH MANAGER_ID= :P8_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')  )
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID	) TABLE2
	 ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2
	 START WITH  with E2.ATTENDEE_ID = E1.EMP_ID 
	 CONNECT BY PRIOR E2.MANAGER_ID = E2.ATTENDEE_ID)  SUM_DURATION 
 FROM TT_EMPLOYEE E1
 START WITH E1.MANAGER_ID = :P8_MANAGER_ID
 CONNECT BY MANAGER_ID=  PRIOR EMP_ID ;

 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 -------------------------------------------------
 
 
 SELECT * FROM (
SELECT NVL(TO_CHAR(EMP_ID), 'TOTAL') AS NAME,  SUM(FYQ1) FYQ1,  SUM(FYQ2) FYQ2,  SUM(FYQ3) FYQ3, SUM(FYQ4) FYQ4,  SUM(Fyq1+Fyq2+Fyq3+Fyq4) ,D FROM 
(
WITH pivot_data AS (

SELECT * FROM (
SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		AND  EXTRACT(month FROM A.FROM_DATETIMEL) IN (12)
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '12' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		AND  EXTRACT(month FROM A.FROM_DATETIMEL) IN (11)
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '11' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		AND  EXTRACT(month FROM A.FROM_DATETIMEL) IN (10)
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '10' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		AND  EXTRACT(month FROM A.FROM_DATETIMEL) IN (9)
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '9' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		AND  EXTRACT(month FROM A.FROM_DATETIMEL) IN (8)
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '8' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		AND  EXTRACT(month FROM A.FROM_DATETIMEL) IN (7)
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '7' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		AND  EXTRACT(month FROM A.FROM_DATETIMEL) IN (6)
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '6' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		AND  EXTRACT(month FROM A.FROM_DATETIMEL) IN (5)
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '5' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		AND  EXTRACT(month FROM A.FROM_DATETIMEL) IN (4)
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '4' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		AND  EXTRACT(month FROM A.FROM_DATETIMEL) IN (3)
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '3' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		AND  EXTRACT(month FROM A.FROM_DATETIMEL) IN (2)
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '2' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		AND  EXTRACT(month FROM A.FROM_DATETIMEL) IN (1)
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '1' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 


)
 WHERE LEAF=  0  and (:P7_SCOPE = 0 or D = 2)

)
  SELECT *
  FROM   pivot_data
  PIVOT (
   SUM(SUM_DURATION)	
   for QTR in  (6 as "Jun",7 as "July",8 as "Aug",9 as "Sep",10  as "Oct" ,11 as "Nov",12 as "Dec" ,1 as "Jan",2 as "Feb",3 as "Mar",4 as "Apr",5 as "May"  )
))
 group by rollup ( D,EMP_ID ) 
) WHERE NAME != 'TOTAL';






















-----------------------------------------


SELECT * FROM 
(


SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(


SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID












)   WHERE LEAF=  0  and (:P7_SCOPE = 0 or D = 2);









SELECT NVL(TO_CHAR(Name), 'TOTAL') as Name,SUM(Fyq1) FYQ1, SUM(Fyq2) FYQ2, SUM(Fyq3) FYQ3,SUM(Fyq4) FYQ4 , SUM(Fyq1+Fyq2+Fyq3+Fyq4) FROM 
(WITH pivot_data AS (
SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) AS HOURS ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 3 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1) ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , CASE    WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8) THEN 1
        WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11) THEN 2
        WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2) THEN 3
        WHEN  EXTRACT(month FROM FROM_DATETIMEL) IN (3, 4, 5) THEN  4
		END  AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF, LEVEL AS D
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID=:P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1))
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')) AND  EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2)) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 3
group by DURATION,DESIGNATION,EMP_ID,QTR  

UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) AS HOURS ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 1 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1) ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  ,
				 CASE    
					WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8) THEN 1
					WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11) THEN 2
					WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2) THEN 3
					WHEN  EXTRACT(month FROM FROM_DATETIMEL) IN (3, 4, 5) THEN  4
				 END  AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF, LEVEL AS D
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID=:P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1))
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')) AND EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8)) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 1
group by DURATION,DESIGNATION,EMP_ID,QTR 

UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) AS HOURS ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 2 ) as QTR 

FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1)) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , CASE    WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8) THEN 1
        WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11) THEN 2
        WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2) THEN 3
        WHEN  EXTRACT(month FROM FROM_DATETIMEL) IN (3, 4, 5) THEN  4
		END  AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF, LEVEL AS D
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID=:P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1))
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')) AND EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11)) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 2
group by DURATION,DESIGNATION,EMP_ID,QTR 

UNION ALL

				SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) AS HOURS ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
				FROM TT_EMPLOYEE X ,(
				SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 4 ) as QTR 

				FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
									 FROM TT_EMPLOYEE
									 START WITH MANAGER_ID=:P8_MANAGER_ID
									 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
									 ) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1) ) TABLE1 
				FULL OUTER JOIN 
					 (
					 
					 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
					 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , CASE    WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8) THEN 1
						WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11) THEN 2
						WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2) THEN 3
						WHEN  EXTRACT(month FROM FROM_DATETIMEL) IN (3, 4, 5) THEN  4
						END  AS QTR
								FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
								WHERE  B.ATTENDEE_ID in (
											SELECT EMP_ID  
											FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF, LEVEL AS D
											FROM TT_EMPLOYEE
											START WITH MANAGER_ID=:P8_MANAGER_ID
											CONNECT BY MANAGER_ID = PRIOR EMP_ID 
										) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1))
				AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')) AND EXTRACT(month FROM FROM_DATETIMEL) IN (3, 4, 5)  ) 
				GROUP BY ATTENDEE_ID  , QTR )  TABLE2
				ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
				WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 4
				group by DURATION,DESIGNATION,EMP_ID,QTR
 )
  SELECT *
  FROM   pivot_data
  PIVOT (
   SUM(HOURS)	
   for QTR in (1 as "FYQ1",2 as "FYQ2",3 as "FYQ3" ,4 as "FYQ4")
)
ORDER BY DESIGNATION,NAME )
group by rollup (NAME) 
;















-------------------------


 
WITH pivot_data AS (

SELECT * FROM (
SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		AND  EXTRACT(month FROM A.FROM_DATETIMEL) IN (12, 1, 2)
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '4' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		AND  EXTRACT(month FROM A.FROM_DATETIMEL) IN (3, 4, 5)
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '1' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		AND  EXTRACT(month FROM A.FROM_DATETIMEL) IN (6, 7, 8)
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '2' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH EMP_ID=:P7_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) ) TABLE1 
FULL OUTER JOIN 
     (

     SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
     FROM (
        SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
        FROM TTEVENT_SESSIONS  A ,
             TTESESSIONS_ATTENDEE  B ,
            (SELECT EMP_ID , MANAGER_ID
			 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				     FROM TT_EMPLOYEE
				     START WITH EMP_ID= :P7_MANAGER_ID
				     CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
				) 
                        WHERE LEAF=  1
             ) C
        WHERE
        B.ATTENDEE_ID = C.EMP_ID
		AND A.TRAINING_ID = B.TRAINING_ID 
		AND A.SESSION_ID = B.SESSION_ID 
		AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy')  )
		AND  EXTRACT(month FROM A.FROM_DATETIMEL) IN (9, 10, 11)
		
	) 
     GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
	
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '3' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID=  PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID )
 WHERE LEAF=  0  and (:P7_SCOPE = 0 or D = 2)

)
  SELECT *
  FROM   pivot_data
  PIVOT (
   SUM(SUM_DURATION)	
   for QTR in (6 as "Jun",7 as "July",8 as "Aug",9 as "Sep",10  as "Oct" ,11 as "Nov",12 as "Dec" ,1 as "Jan",2 as "Feb",3 as "Mar",4 as "Apr",5 as "May"  )
) ORDER BY D;
















-----------------------------



SELECT * FROM (
SELECT NVL(TO_CHAR(EMP_ID), 'TOTAL') AS NAME, SUM (Jun1) JUN, SUM (Jul1) JUL, SUM(Aug1) AUG, SUM(Sep1) SEP,  SUM(Oct1) OCT, SUM(Nov1) NOV, SUM(Dec1) DEC, SUM (Jan1) JAN, SUM(Feb1) FEB, SUM(Mar1) Mar, SUM(Apr1) APR,D FROM 
(
WITH pivot_data AS (

SELECT * FROM (
SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P7_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P7_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (12)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '12' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P7_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P7_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (11)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '11' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P7_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P7_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (10)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '10' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P7_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P7_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (9)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '9' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P7_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P7_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (8)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '8' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P7_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P7_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (7)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '7' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P7_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P7_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (6)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '6' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P7_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P7_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (5)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '5' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P7_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P7_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (4)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '4' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P7_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P7_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (3)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '3' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P7_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P7_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (2)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '2' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P7_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P7_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P7_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P7_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (1)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '1' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P7_MANAGER_ID 


)
 WHERE LEAF= 0 and (:P7_SCOPE = 0 or D = 2)

)
 SELECT *
 FROM pivot_data
 PIVOT (
 SUM(SUM_DURATION) 
 for QTR in (6 as "Jun",7 as "Jul",8 as "Aug",9 as "Sep",10 as "Oct" ,11 as "Nov",12 as "Dec" ,1 as "Jan",2 as "Feb",3 as "Mar",4 as "Apr",5 as "My" )
))
 group by rollup ( D,EMP_ID ) 
) WHERE NAME != 'TOTAL';


















------------------------


DECLARE 

isUserManager varchar(50);
userManagerId varchar(60);
userFamily  varchar(500);
userArea varchar(500);
userLine varchar(500);
RESULT varchar(500);

BEGIN


BEGIN
  SELECT 'TRUE' INTO isUserManager
    FROM TTE_MANAGER_PROFILE
    WHERE MANAGER_ID = :APP_USER;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    isUserManager := 'FALSE';
END;

if isUserManager = 'FALSE'
then 

BEGIN

SELECT MANAGER_ID INTO  userManagerId FROM TT_EMPLOYEE WHERE EMP_ID = :APP_USER;

SELECT PLA_FAMILY,PLA_AREA, PLA_LINE INTO userFamily,userArea,userLine 
FROM TTE_MANAGER_PROFILE
WHERE MANAGER_ID IN (SELECT MANAGER_ID FROM TT_EMPLOYEE WHERE EMP_ID = :APP_USER );

EXCEPTION
   WHEN NO_DATA_FOUND THEN
    userFamily := '';
	userArea := '';
	userLine := '';
	userManagerId := '';
END;


else 

FOR employee_rec IN (
        SELECT PLA_FAMILY,PLA_AREA, PLA_LINE 
          FROM TTE_MANAGER_PROFILE WHERE MANAGER_ID IN (

				SELECT EMP_ID 
				 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				 FROM TT_EMPLOYEE
				 START WITH EMP_ID=  :APP_USER
				 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
				 ) 
				 WHERE LEAF= 0
			)
	   )
   LOOP

      userFamily := employee_rec.PLA_FAMILY|| ','||userFamily ;
      userArea := employee_rec.PLA_AREA|| ',' ||userArea ;
      userline := employee_rec.PLA_LINE || ',' || userline ;

   END LOOP;

end if;

--DBMS_OUTPUT.PUT_LINE('is User Manager' || isUserManager );
:ISAPPUSERMANAGER := isUserManager;

Begin
 SELECT listagg ( names , ',' ) within GROUP (ORDER BY rn )
   INTO RESULT 
   FROM
  (
         SELECT level rn,
                regexp_substr ( userArea , '[^,]+', 1, level ) names,
                row_number ( ) over ( partition BY regexp_substr ( userArea , '[^,]+', 1, level ) order by level ) rnn
           FROM dual
          CONNECT BY regexp_substr ( userArea , '[^,]+', 1, level ) IS NOT NULL
  )
  WHERE rnn = 1;
--Dbms_Output.Put_Line('PLA Area: ' || RESULT );

:APPUSERPLAAREA := RESULT;
end;


Begin
 SELECT listagg ( names , ',' ) within GROUP (ORDER BY rn )
   INTO RESULT 
   FROM
  (
         SELECT level rn,
                regexp_substr ( userFamily , '[^,]+', 1, level ) names,
                row_number ( ) over ( partition BY regexp_substr ( userFamily , '[^,]+', 1, level ) order by level ) rnn
           FROM dual
          CONNECT BY regexp_substr ( userFamily , '[^,]+', 1, level ) IS NOT NULL
  )
  WHERE rnn = 1;
--Dbms_Output.Put_Line('PLA Family: ' || RESULT );
:APPUSERPLAFAMILY := RESULT;

end;

Begin
 SELECT listagg ( names , ',' ) within GROUP (ORDER BY rn )
   INTO RESULT 
   FROM
  (
         SELECT level rn,
                regexp_substr ( userLine , '[^,]+', 1, level ) names,
                row_number ( ) over ( partition BY regexp_substr ( userLine , '[^,]+', 1, level ) order by level ) rnn
           FROM dual
          CONNECT BY regexp_substr ( userLine , '[^,]+', 1, level ) IS NOT NULL
  )
  WHERE rnn = 1;
--Dbms_Output.Put_Line('PLA Line: ' || RESULT );
:APPUSERPLALINE := RESULT;


:APPUSERMANAGER := userManagerId;


end;

END;










-----------------------------



BEGIN
 
 
 
 
 IF  :ISAPPUSERMANAGER = 'FALSE' 
 THEN
 
 BEGIN
  FOR events IN (
    SELECT "EVENT_NAME", "DISCRIPTION" ,"EVENT_TYPE","EVENT_RESOURCE_LINK","TOWARDS_PLA_FAMILY","TOWARDS_PLA_AREA" ,"OWNED_BY", "SESSION_MODE", "REGION", "COUNTRY","LOCATION","SESSION_STATUS",
    "SCHEDULED_TIME","SCHEDULED_ENDTIME","EVENT_VISIBILITY","MGR_EVENT_VISIBILITY"
	FROM EVENTSCHEDULE  WHERE EVENT_ID  IN (
	
			SELECT TRAINING_ID  FROM TTESESSIONS_ATTENDEE  WHERE ATTENDEE_ID = :APP_USER 
			
			UNION 
			
			SELECT EVENT_ID FROM EVENTSCHEDULE 
			WHERE 	OWNED_BY =:APP_USER 
					OR (PRESENTOR1 =:APP_USER OR PRESENTOR2 =:APP_USER  OR PRESENTOR3 =:APP_USER OR PRESENTOR4 =:APP_USER OR PRESENTOR_5 =:APP_USER )
					OR (EVENT_VISIBILITY = 'OPEN') 
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ALL')
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_ME' AND OWNED_BY = :APPUSERMANAGER)
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_AREA' AND  TOWARDS_PLA_AREA = :APPUSERPLAAREA)
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_FAMILY' AND  TOWARDS_PLA_FAMILY = :APPUSERPLAFAMILY)
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_LINE' AND  TOWARDS_PLA_LINE = :APPUSERPLALINE)
	)
	
	
	ORDER BY SCHEDULED_TIME DESC 
	
	
	
  )
  LOOP

     htp.p (
'<div style="padding-left: 0.5cm; background-color:#f0f0f0;  z-index: 1; ">
	<div>
		<div class="t-Form--slimPadding">
<div class="t-Form--slimPadding">
<table  width="700">
<tr><td>

			<h4 style="font-family:Helvetica Neue; " > '  || events.EVENT_NAME||  '</h4>
			<p   style="font-size: 90%;" ><i>'|| INITCAP(to_char(events.SCHEDULED_TIME,'MONTH DD, YYYY')) ||
            ' ' || to_char(events.SCHEDULED_TIME,'HH24:MI') || '-' || to_char(events.SCHEDULED_ENDTIME,'HH24:MI')  || '    to    ' || 
            INITCAP(to_char(events.SCHEDULED_ENDTIME,'MONTH DD, YYYY')) ||' ' || to_char(events.SCHEDULED_TIME,'HH24:MI') || '-' 
                               || to_char(events.SCHEDULED_ENDTIME,'HH24:MI') || '</i><p><br>

   </td><tr><tr><td>         
           <div style="width:75%">
              <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;"> Type:</i> <b> '|| events.EVENT_TYPE ||' </b>  <br> <i style="font-size: 90%;"> PlA Family : </i> <b>'|| events.TOWARDS_PLA_FAMILY||'</b> <br> <i style="font-size: 90%;"> Region : </i> <b>'|| events.REGION||'</b> <br><i style="font-size: 90%;"> Status : </i> <b>'|| events.SESSION_STATUS||'</b>    </div> 
              <div style="float: right;"><i style="font-size: 90%; margin: 0 1.5%;"> Mode : </i> <b>'|| events.SESSION_MODE||'</b> <br> <i style="font-size: 90%;"> Pla Area : </i> <b>'|| events.TOWARDS_PLA_AREA||'</b> <br> <i style="font-size: 90%;">Country : </i> <b>'||events.COUNTRY||'</b><br> <i style="font-size: 90%;"> Location : </i> <b>'|| events.LOCATION||'</b> </div>
           </div>
  </td><tr><tr><td>
           		
          
		   
		   <p> <i style="font-size: 90%;"> Description  :</i> <p  style="font-family:Helvetica Neue; width: 70%; text-indent: 20px;">'||  events.DISCRIPTION || '</p>   </p>   

   </td><tr><tr><td>
          
           <p> <i style="font-size: 90%;"> Resource Link  :</i><a href="'||  events.EVENT_RESOURCE_LINK || '" target="_blank"> '|| events.EVENT_RESOURCE_LINK ||'</a> </p> 

   </td><tr><tr><td>         
           <div style="width:75%">
             <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;">  EMP VISBILITY:</i> <b> '|| events.EVENT_VISIBILITY ||' </b>   <br> <i style="font-size: 90%;"> MGR VISBILITY: </i> <b>'|| events.MGR_EVENT_VISIBILITY||'</b> </div> 
            </div>
  </td><tr><tr><td>

</td><tr></table>
           
           </div>
		</div>
	</div>
</div>
');

  END LOOP;

END;

ELSE 

BEGIN
  FOR events IN (
    SELECT "EVENT_NAME", "DISCRIPTION" ,"EVENT_TYPE","EVENT_RESOURCE_LINK","TOWARDS_PLA_FAMILY","TOWARDS_PLA_AREA" ,"OWNED_BY", "SESSION_MODE", "REGION", "COUNTRY","LOCATION","SESSION_STATUS",
    "SCHEDULED_TIME","SCHEDULED_ENDTIME","EVENT_VISIBILITY","MGR_EVENT_VISIBILITY"
	FROM EVENTSCHEDULE  WHERE EVENT_ID  IN (
	
			
			SELECT EVENT_ID FROM EVENTSCHEDULE 
			WHERE 	OWNED_BY =:APP_USER 
					OR (PRESENTOR1 =:APP_USER OR PRESENTOR2 =:APP_USER  OR PRESENTOR3 =:APP_USER OR PRESENTOR4 =:APP_USER OR PRESENTOR_5 =:APP_USER )
					OR (EVENT_VISIBILITY = 'OPEN') 
					OR ( MGR_EVENT_VISIBILITY ='ALL')
					OR ( MGR_EVENT_VISIBILITY ='ONLY_ME' AND OWNED_BY = :APPUSERMANAGER)
					OR ( MGR_EVENT_VISIBILITY ='PLA_AREA' AND  TOWARDS_PLA_AREA    IN ( SELECT regexp_substr ( :APPUSERPLAAREA, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLAAREA, '[^,]+', 1, level ) IS NOT NULL ))
					OR ( MGR_EVENT_VISIBILITY ='PLA_FAMILY' AND  TOWARDS_PLA_FAMILY IN ( SELECT regexp_substr ( :APPUSERPLAFAMILY, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLAFAMILY, '[^,]+', 1, level ) IS NOT NULL ))
					OR ( MGR_EVENT_VISIBILITY ='PLA_LINE' AND  TOWARDS_PLA_LINE IN ( SELECT regexp_substr ( :APPUSERPLALINE, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLALINE, '[^,]+', 1, level ) IS NOT NULL ))
	)
	
	
	ORDER BY SCHEDULED_TIME DESC 
	
	
	
  )
  LOOP

     htp.p (
'<div style="padding-left: 0.5cm; background-color:#f0f0f0;  z-index: 1; ">
	<div>
		<div class="t-Form--slimPadding">
<div class="t-Form--slimPadding">
<table  width="700">
<tr><td>

			<h4 style="font-family:Helvetica Neue; " > '  || events.EVENT_NAME||  '</h4>
			<p   style="font-size: 90%;" ><i>'|| INITCAP(to_char(events.SCHEDULED_TIME,'MONTH DD, YYYY')) ||
            ' ' || to_char(events.SCHEDULED_TIME,'HH24:MI') || '-' || to_char(events.SCHEDULED_ENDTIME,'HH24:MI')  || '    to    ' || 
            INITCAP(to_char(events.SCHEDULED_ENDTIME,'MONTH DD, YYYY')) ||' ' || to_char(events.SCHEDULED_TIME,'HH24:MI') || '-' 
                               || to_char(events.SCHEDULED_ENDTIME,'HH24:MI') || '</i><p><br>

   </td><tr><tr><td>         
           <div style="width:75%">
              <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;"> Type:</i> <b> '|| events.EVENT_TYPE ||' </b>  <br> <i style="font-size: 90%;"> PlA Family : </i> <b>'|| events.TOWARDS_PLA_FAMILY||'</b> <br> <i style="font-size: 90%;"> Region : </i> <b>'|| events.REGION||'</b> <br><i style="font-size: 90%;"> Status : </i> <b>'|| events.SESSION_STATUS||'</b>    </div> 
              <div style="float: right;"><i style="font-size: 90%; margin: 0 1.5%;"> Mode : </i> <b>'|| events.SESSION_MODE||'</b> <br> <i style="font-size: 90%;"> Pla Area : </i> <b>'|| events.TOWARDS_PLA_AREA||'</b> <br> <i style="font-size: 90%;">Country : </i> <b>'||events.COUNTRY||'</b><br> <i style="font-size: 90%;"> Location : </i> <b>'|| events.LOCATION||'</b> </div>
           </div>
  </td><tr><tr><td>
           		
          
		   
		   <p> <i style="font-size: 90%;"> Description  :</i> <p  style="font-family:Helvetica Neue; width: 70%; text-indent: 20px;">'||  events.DISCRIPTION || '</p>   </p>   

   </td><tr><tr><td>
          
           <p> <i style="font-size: 90%;"> Resource Link  :</i><a href="'||  events.EVENT_RESOURCE_LINK || '" target="_blank"> '|| events.EVENT_RESOURCE_LINK ||'</a> </p> 

   </td><tr><tr><td>         
           <div style="width:75%">
             <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;">  EMP VISBILITY:</i> <b> '|| events.EVENT_VISIBILITY ||' </b>   <br> <i style="font-size: 90%;"> MGR VISBILITY: </i> <b>'|| events.MGR_EVENT_VISIBILITY||'</b> </div> 
            </div>
  </td><tr><tr><td>

</td><tr></table>
           
           </div>
		</div>
	</div>
</div>
');
  END LOOP;

END;


END IF ;

END;








-------------------------------


 (
	
			
			SELECT EVENT_ID FROM EVENTSCHEDULE 
			WHERE 	OWNED_BY =:APP_USER 
					OR ( PRESENTOR1 =:APP_USER OR PRESENTOR2 =:APP_USER  OR PRESENTOR3 =:APP_USER OR PRESENTOR4 =:APP_USER OR PRESENTOR_5 =:APP_USER )
					OR ( EVENT_VISIBILITY = 'OPEN') 
					OR ( MGR_EVENT_VISIBILITY ='ALL')
                    OR ( EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_ME' AND OWNED_BY = :APP_USER)					
					OR ( MGR_EVENT_VISIBILITY ='ONLY_DIRECTS' AND OWNED_BY IN (SELECT EMP_ID    FROM TT_EMPLOYEE START WITH EMP_ID= :APP_USER CONNECT BY PRIOR  MANAGER_ID=  EMP_ID))
					OR ( MGR_EVENT_VISIBILITY ='PLA_AREA' AND  TOWARDS_PLA_AREA    IN ( SELECT regexp_substr ( :APPUSERPLAAREA, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLAAREA, '[^,]+', 1, level ) IS NOT NULL ))
					OR ( MGR_EVENT_VISIBILITY ='PLA_FAMILY' AND  TOWARDS_PLA_FAMILY IN ( SELECT regexp_substr ( :APPUSERPLAFAMILY, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLAFAMILY, '[^,]+', 1, level ) IS NOT NULL ))
					OR ( MGR_EVENT_VISIBILITY ='PLA_LINE' AND  TOWARDS_PLA_LINE IN ( SELECT regexp_substr ( :APPUSERPLALINE, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLALINE, '[^,]+', 1, level ) IS NOT NULL ))
	)
	
	
	(
			SELECT EVENT_ID FROM EVENTSCHEDULE 
			WHERE 	OWNED_BY =:APP_USER 
					OR (PRESENTOR1 =:APP_USER OR PRESENTOR2 =:APP_USER  OR PRESENTOR3 =:APP_USER OR PRESENTOR4 =:APP_USER OR PRESENTOR_5 =:APP_USER )
					OR (EVENT_VISIBILITY = 'OPEN') 
					OR ( :ISAPPUSERMANAGER = 'FALSE' AND EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ALL')
					OR ( :ISAPPUSERMANAGER = 'FALSE' AND EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_ME' AND OWNED_BY =:APPUSERMANAGER )
					OR ( :ISAPPUSERMANAGER = 'FALSE' AND EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_DIRECTS' AND OWNED_BY IN (SELECT EMP_ID    FROM TT_EMPLOYEE START WITH EMP_ID= :APPUSERMANAGER CONNECT BY PRIOR  MANAGER_ID=  EMP_ID))
					OR ( :ISAPPUSERMANAGER = 'FALSE' AND EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_AREA' AND  TOWARDS_PLA_AREA = :APPUSERPLAAREA)
					OR ( :ISAPPUSERMANAGER = 'FALSE' AND EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_FAMILY' AND  TOWARDS_PLA_FAMILY = :APPUSERPLAFAMILY)
					OR ( :ISAPPUSERMANAGER = 'FALSE' AND EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_LINE' AND  TOWARDS_PLA_LINE = :APPUSERPLALINE)
					OR ( :ISAPPUSERMANAGER = 'TRUE' AND MGR_EVENT_VISIBILITY ='ALL')
                    OR ( :ISAPPUSERMANAGER = 'TRUE' AND EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_ME' AND OWNED_BY = :APP_USER)					
					OR ( :ISAPPUSERMANAGER = 'TRUE' AND MGR_EVENT_VISIBILITY ='ONLY_DIRECTS' AND OWNED_BY IN (SELECT EMP_ID    FROM TT_EMPLOYEE START WITH EMP_ID= :APP_USER CONNECT BY PRIOR  MANAGER_ID=  EMP_ID))
					OR ( :ISAPPUSERMANAGER = 'TRUE' AND MGR_EVENT_VISIBILITY ='PLA_AREA' AND  TOWARDS_PLA_AREA    IN ( SELECT regexp_substr ( :APPUSERPLAAREA, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLAAREA, '[^,]+', 1, level ) IS NOT NULL ))
					OR ( :ISAPPUSERMANAGER = 'TRUE' AND MGR_EVENT_VISIBILITY ='PLA_FAMILY' AND  TOWARDS_PLA_FAMILY IN ( SELECT regexp_substr ( :APPUSERPLAFAMILY, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLAFAMILY, '[^,]+', 1, level ) IS NOT NULL ))
					OR ( :ISAPPUSERMANAGER = 'TRUE' AND MGR_EVENT_VISIBILITY ='PLA_LINE' AND  TOWARDS_PLA_LINE IN ( SELECT regexp_substr ( :APPUSERPLALINE, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLALINE, '[^,]+', 1, level ) IS NOT NULL ))
	
					
					
					
					
					
	)  
	
STATIC:Pla Area;PLA_AREA,Pla Family;PLA_FAMILY,Pla Line;PLA_LINE,Open For All;ALL,Only Me;ONLY_ME,All Managers Reporting to Me;ONLY_DIRECTS
STATIC:All Directs Under Selected Managers;SELECTED,Only by registrants/ Nominee ;CLOSED,Open For All ;OPEN

























---------------------


CREATE OR REPLACE EDITIONABLE TRIGGER  "BI_APEX_ACCESS_CONTROL" 
  before insert or update on apex_access_control
  for each row
begin
    if inserting and :new.id is null then
        select apex_access_control_seq.nextval into :new.id from sys.dual;
    end if;
    if inserting then
        :new.created_by := v('USER');
        :new.created_on := sysdate;
    end if;
    if updating then
        :new.updated_by := v('USER');
        :new.updated_on := sysdate;
    end if;
end; 

/
ALTER TRIGGER  "BI_APEX_ACCESS_CONTROL" ENABLE
/


ALTER TABLE  "APEX_ACCESS_CONTROL" ADD CONSTRAINT "APEX_ACCESS_CONTROL_FK" FOREIGN KEY ("SETUP_ID")
	  REFERENCES  "APEX_ACCESS_SETUP" ("ID") ENABLE
	  
	  
	  
	  
ALTER TABLE  "APEX_ACCESS_CONTROL" ADD CONSTRAINT "TT_MGR_ACL_FK" FOREIGN KEY ("ADMIN_USERNAME")
      REFERENCES  "TT_EMPLOYEE" ("EMP_ID") ON DELETE CASCADE ENABLE
	  
	  
	  
CREATE OR REPLACE EDITIONABLE TRIGGER  "TT_EMPLOYEE_MANAGER" 
  before insert or update on TT_EMPLOYEE
  for each row
begin
    if inserting then
        :new.MANAGER_ID := v('P12_MANAGER_ID');
    end if;
end;

/

/

     INSERT INTO APEX_ACCESS_CONTROL
      (ADMIN_USERNAME,
	   ADMIN_PRIVILEGES,SETUP_ID)
      VALUES 
        (:new.emp_id,
		 'EDIT',1);
		 
		 
CREATE OR REPLACE EDITIONABLE TRIGGER  "TT_MGR_ACL_INSERT"
AFTER INSERT ON  TT_EMPLOYEE
FOR EACH ROW
WHEN (new.DESIGNATION = 'M' )
BEGIN 

      INSERT INTO TTE_MANAGER_PROFILE
	  ( MANAGER_ID)
     VALUES
      ( :new.emp_id);
	  


END;

ALTER TRIGGER  "TT_MGR_ACL_INSERT" ENABLE


















--------------------------------





CREATE OR REPLACE EDITIONABLE TRIGGER  "TT_MGR_ACL_INSERT" 
AFTER INSERT ON  TT_EMPLOYEE
FOR EACH ROW
  WHEN (new.DESIGNATION = 'M' ) 
BEGIN 

     INSERT INTO TTE_MANAGER_PROFILE  ( MANAGER_ID)  VALUES       ( :new.emp_id);  
     INSERT INTO APEX_ACCESS_CONTROL (ADMIN_USERNAME, ADMIN_PRIVILEGES, SETUP_ID)  VALUES (:new.emp_id, 'EDIT',1);

END;

/
ALTER TRIGGER  "TT_MGR_ACL_INSERT" ENABLE
/



CREATE OR REPLACE EDITIONABLE TRIGGER  "TT_MGR_ACL_UPDATE" 
AFTER UPDATE ON  TT_EMPLOYEE
FOR EACH ROW
BEGIN

  IF (INSTR(:new.DESIGNATION,'M' ) > 0 AND INSTR(:old.DESIGNATION ,'IC') > 0 ) THEN 
     INSERT INTO TTE_MANAGER_PROFILE  ( MANAGER_ID)  VALUES       ( :new.emp_id);  
     INSERT INTO APEX_ACCESS_CONTROL (ADMIN_USERNAME, ADMIN_PRIVILEGES, SETUP_ID)  VALUES (:new.emp_id, 'EDIT',1);
  ELSIF (INSTR(:new.DESIGNATION ,'IC') > 0 AND INSTR(:old.DESIGNATION ,'M') > 0  ) THEN 
     DELETE FROM  TTE_MANAGER_PROFILE  WHERE  MANAGER_ID= :old.emp_id;  
     DELETE FROM APEX_ACCESS_CONTROL  WHERE ADMIN_USERNAME = :old.emp_id;
  END IF;
  
END;
ALTER TRIGGER  "TT_MGR_ACL_UPDATE" ENABLE



   WHEN grade = 'A' THEN dbms_output.put_line('Excellent');
   WHEN grade = 'B' THEN dbms_output.put_line('Very Good');
   WHEN grade = 'C' THEN dbms_output.put_line('Good');
   WHEN grade = 'D' THEN dbms_output.put_line('Fair');
   WHEN grade = 'F' THEN dbms_output.put_line('Poor');
   ELSE dbms_output.put_line('No such grade');
END CASE;





























--------------------------------


SELECT * FROM (
SELECT NVL(TO_CHAR(Name), 'total') as Name,SUM(Fyq1) FYQ1, SUM(Fyq2) FYQ2, SUM(Fyq3) FYQ3,SUM(Fyq4) FYQ4 , SUM(Fyq1+Fyq2+Fyq3+Fyq4) FROM 

(WITH pivot_data AS (
SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) AS HOURS ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 3 ) as QTR 
FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1) ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , CASE    WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8) THEN 1
        WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11) THEN 2
        WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2) THEN 3
        WHEN  EXTRACT(month FROM FROM_DATETIMEL) IN (3, 4, 5) THEN  4
		END  AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF, LEVEL AS D
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID=:P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1))
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')) AND  EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2)) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 3
group by DURATION,DESIGNATION,EMP_ID,QTR  

UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) AS HOURS ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 1 ) as QTR 
FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1) ) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  ,
				 CASE    
					WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8) THEN 1
					WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11) THEN 2
					WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2) THEN 3
					WHEN  EXTRACT(month FROM FROM_DATETIMEL) IN (3, 4, 5) THEN  4
				 END  AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF, LEVEL AS D
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID=:P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1))
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')) AND EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8)) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 1
group by DURATION,DESIGNATION,EMP_ID,QTR 

UNION ALL

SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) AS HOURS ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
FROM TT_EMPLOYEE X ,(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 2 ) as QTR 
FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
                     FROM TT_EMPLOYEE
                     START WITH MANAGER_ID=:P8_MANAGER_ID
                     CONNECT BY MANAGER_ID = PRIOR EMP_ID 
                     ) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1)) TABLE1 
FULL OUTER JOIN 
     (
	 
	 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
	 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , CASE    WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8) THEN 1
        WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11) THEN 2
        WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2) THEN 3
        WHEN  EXTRACT(month FROM FROM_DATETIMEL) IN (3, 4, 5) THEN  4
		END  AS QTR
                FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
                WHERE  B.ATTENDEE_ID in (
							SELECT EMP_ID  
							FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF, LEVEL AS D
							FROM TT_EMPLOYEE
							START WITH MANAGER_ID=:P8_MANAGER_ID
							CONNECT BY MANAGER_ID = PRIOR EMP_ID 
						) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1))
AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')) AND EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11)) 
GROUP BY ATTENDEE_ID  , QTR )  TABLE2
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 2
group by DURATION,DESIGNATION,EMP_ID,QTR 

UNION ALL

				SELECT EMP_ID || ' (' || DESIGNATION || ') ' AS NAME, sum(DURATION) AS HOURS ,TO_NUMBER(regexp_replace(DESIGNATION, '[^0-9]', '')) AS DESIGNATION ,QTR
				FROM TT_EMPLOYEE X ,(
				SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION ,  COALESCE( TABLE2.QTR, 4 ) as QTR 
				FROM (SELECT EMP_ID  FROM (SELECT EMP_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
									 FROM TT_EMPLOYEE
									 START WITH MANAGER_ID=:P8_MANAGER_ID
									 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
									 ) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1) ) TABLE1 
				FULL OUTER JOIN 
					 (
					 
					 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION , ATTENDEE_ID , TO_NUMBER(QTR) AS QTR
					 FROM (     SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID  , CASE    WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (6,7,8) THEN 1
						WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (9, 10, 11) THEN 2
						WHEN EXTRACT(month FROM FROM_DATETIMEL) IN (12, 1, 2) THEN 3
						WHEN  EXTRACT(month FROM FROM_DATETIMEL) IN (3, 4, 5) THEN  4
						END  AS QTR
								FROM TTEVENT_SESSIONS  A ,TTESESSIONS_ATTENDEE  B
								WHERE  B.ATTENDEE_ID in (
											SELECT EMP_ID  
											FROM (SELECT EMP_ID, CONNECT_BY_ISLEAF AS LEAF, LEVEL AS D
											FROM TT_EMPLOYEE
											START WITH MANAGER_ID=:P8_MANAGER_ID
											CONNECT BY MANAGER_ID = PRIOR EMP_ID 
										) WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1))
				AND A.TRAINING_ID = B.TRAINING_ID AND A.SESSION_ID = B.SESSION_ID AND   ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy')) AND EXTRACT(month FROM FROM_DATETIMEL) IN (3, 4, 5)  ) 
				GROUP BY ATTENDEE_ID  , QTR )  TABLE2
				ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID  ) Y
				WHERE X.EMP_ID = Y.ATTENDEE_ID  AND QTR = 4
				group by DURATION,DESIGNATION,EMP_ID,QTR
 )
  SELECT *
  FROM   pivot_data
  PIVOT (
   SUM(HOURS)	
   for QTR in (1 as "FYQ1",2 as "FYQ2",3 as "FYQ3" ,4 as "FYQ4")
)
ORDER BY DESIGNATION,NAME )
group by rollup (NAME) 
) WHERE Name !=  'total' ;


















-------------------------





SELECT *  FROM 
(WITH pivot_data AS (

SELECT * FROM (
SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (12)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '12' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (11)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '11' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (10)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '10' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (9)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '9' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (8)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '8' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (7)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '7' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (6)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '6' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (5)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '5' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (4)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '4' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (3)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '3' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (2)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '2' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (1)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '1' AS QTR
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 


)
 WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 1)
)
 SELECT *
 FROM pivot_data
 PIVOT (
 SUM(SUM_DURATION) 
 for QTR in (6 as "Jun"  ,7 as "Jul",8 as "Aug",9 as "Sep",10 as "Oct" ,11 as "Nov",12 as "Dec" ,1 as "Jan",2 as "Feb",3 as "Mar",4 as "Apr",5 as "May" )
))
ORDER BY D;
















----------------------



SELECT * FROM (
SELECT NVL(TO_CHAR(EMP_ID), 'TOTAL') AS NAME, SUM (Jun1) JUN, SUM (Jul1) JUL, SUM(Aug1) AUG, SUM(Sep1) SEP,  SUM(Oct1) OCT, SUM(Nov1) NOV, SUM(Dec1) DEC, SUM (Jan1) JAN, SUM(Feb1) FEB, SUM(Mar1) Mar, SUM(Apr1) APR,D 
FROM (


SELECT *   FROM 
(WITH pivot_data AS (

SELECT * FROM (
SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (12)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '12' AS MONTH
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (11)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '11' AS MONTH
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (10)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '10' AS MONTH
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (9)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '9' AS MONTH
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (8)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '8' AS MONTH
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (7)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '7' AS MONTH
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (6)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '6' AS MONTH
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (5)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '5' AS MONTH
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (4)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '4' AS MONTH
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (3)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '3' AS MONTH
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (2)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '2' AS MONTH
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 

UNION ALL

SELECT EMP_ID,
(SELECT SUM(DURATION) FROM 
(
SELECT COALESCE(TABLE1.EMP_ID , TABLE2.ATTENDEE_ID ) AS ATTENDEE_ID , COALESCE(DURATION , 0) AS DURATION, MGR_ID,D
FROM (

SELECT EMP_ID , MGR_ID , D FROM (SELECT EMP_ID,MANAGER_ID AS MGR_ID,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D
 FROM TT_EMPLOYEE
 START WITH EMP_ID=:P8_MANAGER_ID
 CONNECT BY MANAGER_ID = PRIOR EMP_ID 
 ) ) TABLE1 
FULL OUTER JOIN 
 (

 SELECT SUM (EXTRACT(DAY FROM HOURS)*24 + EXTRACT ( HOUR FROM HOURS) + EXTRACT ( MINUTE FROM HOURS)/60 ) AS DURATION ,ATTENDEE_ID,MANAGER_ID
 FROM (
 SELECT EXTRACT (DAY FROM A.NUMBER_OF_DAYS) * A.INTERVAL AS HOURS , B.ATTENDEE_ID , MANAGER_ID
 FROM TTEVENT_SESSIONS A ,
 TTESESSIONS_ATTENDEE B ,
 (SELECT EMP_ID , MANAGER_ID
 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
 FROM TT_EMPLOYEE
 START WITH EMP_ID= :P8_MANAGER_ID
 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
 ) 
 WHERE LEAF= 1
 ) C
 WHERE
 B.ATTENDEE_ID = C.EMP_ID
 AND A.TRAINING_ID = B.TRAINING_ID 
 AND A.SESSION_ID = B.SESSION_ID 
 AND ( A.FROM_DATETIMEL between ADD_MONTHS(to_date('01-06-'|| :P8_YEAR ,'dd-mm-yyyy'),-12) and to_date('01-06-' || :P8_YEAR,'dd-mm-yyyy') )
 AND EXTRACT(month FROM A.FROM_DATETIMEL) IN (1)
 
 ) 
 GROUP BY ATTENDEE_ID,MANAGER_ID
) TABLE2
 
ON TABLE1.EMP_ID = TABLE2.ATTENDEE_ID ) E2 
START WITH E2.ATTENDEE_ID = TT_EMPLOYEE.EMP_ID
CONNECT BY PRIOR E2.ATTENDEE_ID = E2.MGR_ID) SUM_DURATION,CONNECT_BY_ISLEAF AS LEAF , LEVEL AS D , '1' AS MONTH
FROM TT_EMPLOYEE
CONNECT BY MANAGER_ID= PRIOR EMP_ID 
START WITH EMP_ID= :P8_MANAGER_ID 


)
 WHERE LEAF=  1 and (:P8_SCOPE = 0 or D = 2)
)
 SELECT *
 FROM pivot_data
 PIVOT (
 SUM(SUM_DURATION) 
 for MONTH in (6 as "Jun1"  ,7 as "Jul1",8 as "Aug1",9 as "Sep1",10 as "Oct1" ,11 as "Nov1",12 as "Dec1" ,1 as "Jan1",2 as "Feb1",3 as "Mar1",4 as "Apr1",5 as "May1" )
))
ORDER BY D


)group by rollup (EMP_ID) 
) WHERE Name !=  'total' ;


























=============================



BEGIN
 
 
 
 
 IF  :ISAPPUSERMANAGER = 'FALSE' 
 THEN
 
 BEGIN
  FOR events IN (
    SELECT "EVENT_NAME", "DISCRIPTION" ,"EVENT_TYPE","EVENT_RESOURCE_LINK","TOWARDS_PLA_FAMILY","TOWARDS_PLA_AREA" ,"OWNED_BY", "SESSION_MODE", "REGION", "COUNTRY","LOCATION","SESSION_STATUS",
    "SCHEDULED_TIME","SCHEDULED_ENDTIME","EVENT_VISIBILITY","MGR_EVENT_VISIBILITY"
	FROM EVENTSCHEDULE  WHERE EVENT_ID  IN (
	
			SELECT TRAINING_ID  FROM TTESESSIONS_ATTENDEE  WHERE ATTENDEE_ID = :APP_USER 
			
			UNION 
			
			SELECT EVENT_ID FROM EVENTSCHEDULE 
			WHERE 	OWNED_BY =:APP_USER 
					OR (PRESENTOR1 =:APP_USER OR PRESENTOR2 =:APP_USER  OR PRESENTOR3 =:APP_USER OR PRESENTOR4 =:APP_USER OR PRESENTOR_5 =:APP_USER )
					OR (EVENT_VISIBILITY = 'OPEN') 
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ALL')
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_ME' AND OWNED_BY = (SELECT MANAGER_ID  FROM TT_EMPLOYEE WHERE EMP_ID = :APP_USER))
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_DIRECTS' AND OWNED_BY IN (SELECT EMP_ID    FROM TT_EMPLOYEE START WITH EMP_ID= :APPUSERMANAGER CONNECT BY PRIOR  MANAGER_ID=  EMP_ID))
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_AREA' AND  TOWARDS_PLA_AREA = :APPUSERPLAAREA)
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_FAMILY' AND  TOWARDS_PLA_FAMILY = :APPUSERPLAFAMILY)
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_LINE' AND  TOWARDS_PLA_LINE = :APPUSERPLALINE)
	)
	
	
	ORDER BY SCHEDULED_TIME DESC 
	
	
	
  )
  LOOP

     htp.p (


'
<div style="padding-left: 3cm; background-color:#f0f0f0;  z-index: 1; ">
<br><br>
	<div>
		<div class="t-Form--slimPadding">
<div class="t-Form--slimPadding">
<table  width="700">
<tr><td>

			<h4 style="font-family:Helvetica Neue; " > '  || events.EVENT_NAME||  '</h4>
			<p   style="font-size: 90%;" ><i>'|| INITCAP(to_char(events.SCHEDULED_TIME,'MONTH DD, YYYY')) ||
            ' ' || to_char(events.SCHEDULED_TIME,'HH24:MI') || '-' || to_char(events.SCHEDULED_ENDTIME,'HH24:MI')  || '    to    ' || 
            INITCAP(to_char(events.SCHEDULED_ENDTIME,'MONTH DD, YYYY')) ||' ' || to_char(events.SCHEDULED_TIME,'HH24:MI') || '-' 
                               || to_char(events.SCHEDULED_ENDTIME,'HH24:MI') || '</i><p><br>

   </td><tr><tr><td>         
           <div style="width:75%">
              <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;"> Type:</i> <b> '|| events.EVENT_TYPE ||' </b>  <br> <i style="font-size: 90%;"> PlA Family : </i> <b>'|| events.TOWARDS_PLA_FAMILY||'</b> <br> <i style="font-size: 90%;"> Region : </i> <b>'|| events.REGION||'</b> <br><i style="font-size: 90%;"> Status : </i> <b>'|| events.SESSION_STATUS||'</b>    </div> 
              <div style="float: right;"><i style="font-size: 90%; margin: 0 1.5%;"> Mode : </i> <b>'|| events.SESSION_MODE||'</b> <br> <i style="font-size: 90%;"> Pla Area : </i> <b>'|| events.TOWARDS_PLA_AREA||'</b> <br> <i style="font-size: 90%;">Country : </i> <b>'||events.COUNTRY||'</b><br> <i style="font-size: 90%;"> Location : </i> <b>'|| events.LOCATION||'</b> </div>
           </div>
  </td><tr><tr><td>
           		
          
		   
		   <p> <i style="font-size: 90%;"> Description  :</i> <p  style="font-family:Helvetica Neue; width: 70%; text-indent: 20px;">'||  events.DISCRIPTION || '</p>   </p>   

   </td><tr><tr><td>
          
           <p> <i style="font-size: 90%;"> Resource Link  :</i><a href="'||  events.EVENT_RESOURCE_LINK || '" target="_blank"> '|| events.EVENT_RESOURCE_LINK ||'</a> </p> 

   </td><tr><tr><td>         
           <div style="width:75%">
             <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;">  EMP VISBILITY:</i> <b> '|| events.EVENT_VISIBILITY ||' </b>   <br> <i style="font-size: 90%;"> MGR VISBILITY: </i> <b>'|| events.MGR_EVENT_VISIBILITY||'</b> </div> 
            </div>
  </td><tr><tr><td>

</td><tr></table>
           
           </div>
		</div>
	</div>
</div><br>
<br>
');

  END LOOP;

END;

ELSE 

BEGIN
  FOR events IN (
    SELECT "EVENT_NAME", "DISCRIPTION" ,"EVENT_TYPE","EVENT_RESOURCE_LINK","TOWARDS_PLA_FAMILY","TOWARDS_PLA_AREA" ,"OWNED_BY", "SESSION_MODE", "REGION", "COUNTRY","LOCATION","SESSION_STATUS",
    "SCHEDULED_TIME","SCHEDULED_ENDTIME","EVENT_VISIBILITY","MGR_EVENT_VISIBILITY"
	FROM EVENTSCHEDULE  WHERE EVENT_ID  IN (
	
			
			SELECT EVENT_ID FROM EVENTSCHEDULE 
			WHERE 	OWNED_BY =:APP_USER 
					OR (PRESENTOR1 =:APP_USER OR PRESENTOR2 =:APP_USER  OR PRESENTOR3 =:APP_USER OR PRESENTOR4 =:APP_USER OR PRESENTOR_5 =:APP_USER )
					OR (EVENT_VISIBILITY = 'OPEN') 
					OR ( MGR_EVENT_VISIBILITY ='ALL')
                    OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_ME' AND OWNED_BY = :APP_USER)					
					OR ( MGR_EVENT_VISIBILITY ='ONLY_DIRECTS' AND OWNED_BY IN (SELECT EMP_ID    FROM TT_EMPLOYEE START WITH EMP_ID= :APP_USER CONNECT BY PRIOR  MANAGER_ID=  EMP_ID))
					OR ( MGR_EVENT_VISIBILITY ='PLA_AREA' AND  TOWARDS_PLA_AREA    IN ( SELECT regexp_substr ( :APPUSERPLAAREA, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLAAREA, '[^,]+', 1, level ) IS NOT NULL ))
					OR ( MGR_EVENT_VISIBILITY ='PLA_FAMILY' AND  TOWARDS_PLA_FAMILY IN ( SELECT regexp_substr ( :APPUSERPLAFAMILY, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLAFAMILY, '[^,]+', 1, level ) IS NOT NULL ))
					OR ( MGR_EVENT_VISIBILITY ='PLA_LINE' AND  TOWARDS_PLA_LINE IN ( SELECT regexp_substr ( :APPUSERPLALINE, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLALINE, '[^,]+', 1, level ) IS NOT NULL ))
	)
	
	
	ORDER BY SCHEDULED_TIME DESC 
	
	
	
  )
  LOOP

     htp.p (
'<div style="padding-left: 3cm; background-color:#f0f0f0;  z-index: 1; ">
	<div>
		<div class="t-Form--slimPadding">
<div class="t-Form--slimPadding">
<table  width="700">
<tr><td>

			<h4 style="font-family:Helvetica Neue; " > '  || events.EVENT_NAME||  '</h4>
			<p   style="font-size: 90%;" ><i>'|| INITCAP(to_char(events.SCHEDULED_TIME,'MONTH DD, YYYY')) ||
            ' ' || to_char(events.SCHEDULED_TIME,'HH24:MI') || '-' || to_char(events.SCHEDULED_ENDTIME,'HH24:MI')  || '    to    ' || 
            INITCAP(to_char(events.SCHEDULED_ENDTIME,'MONTH DD, YYYY')) ||' ' || to_char(events.SCHEDULED_TIME,'HH24:MI') || '-' 
                               || to_char(events.SCHEDULED_ENDTIME,'HH24:MI') || '</i><p><br>

   </td><tr><tr><td>         
           <div style="width:75%">
              <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;"> Type:</i> <b> '|| events.EVENT_TYPE ||' </b>  <br> <i style="font-size: 90%;"> PlA Family : </i> <b>'|| events.TOWARDS_PLA_FAMILY||'</b> <br> <i style="font-size: 90%;"> Region : </i> <b>'|| events.REGION||'</b> <br><i style="font-size: 90%;"> Status : </i> <b>'|| events.SESSION_STATUS||'</b>    </div> 
              <div style="float: right;"><i style="font-size: 90%; margin: 0 1.5%;"> Mode : </i> <b>'|| events.SESSION_MODE||'</b> <br> <i style="font-size: 90%;"> Pla Area : </i> <b>'|| events.TOWARDS_PLA_AREA||'</b> <br> <i style="font-size: 90%;">Country : </i> <b>'||events.COUNTRY||'</b><br> <i style="font-size: 90%;"> Location : </i> <b>'|| events.LOCATION||'</b> </div>
           </div>
  </td><tr><tr><td>
           		
          
		   
		   <p> <i style="font-size: 90%;"> Description  :</i> <p  style="font-family:Helvetica Neue; width: 70%; text-indent: 20px;">'||  events.DISCRIPTION || '</p>   </p>   

   </td><tr><tr><td>
          
           <p> <i style="font-size: 90%;"> Resource Link  :</i><a href="'||  events.EVENT_RESOURCE_LINK || '" target="_blank"> '|| events.EVENT_RESOURCE_LINK ||'</a> </p> 

   </td><tr><tr><td>         
           <div style="width:75%">
             <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;">  EMP VISBILITY:</i> <b> '|| events.EVENT_VISIBILITY ||' </b>   <br> <i style="font-size: 90%;"> MGR VISBILITY: </i> <b>'|| events.MGR_EVENT_VISIBILITY||'</b> </div> 
            </div>
  </td><tr><tr><td>

</td><tr></table>
           
           </div>
		</div>
	</div>
</div><br>
<br>
'

);
  END LOOP;

END;


END IF ;

END;














































==============


BEGIN
 
 
 
 
 IF  :ISAPPUSERMANAGER = 'FALSE' 
 THEN
 
 BEGIN
  FOR events IN (
    SELECT "EVENT_NAME", "DISCRIPTION" ,"EVENT_TYPE","EVENT_RESOURCE_LINK","TOWARDS_PLA_FAMILY","TOWARDS_PLA_AREA" ,"OWNED_BY", "SESSION_MODE", "REGION", "COUNTRY","LOCATION","SESSION_STATUS",
    "SCHEDULED_TIME","SCHEDULED_ENDTIME","EVENT_VISIBILITY","MGR_EVENT_VISIBILITY"
	FROM EVENTSCHEDULE  WHERE EVENT_ID  IN (
	
			SELECT TRAINING_ID  FROM TTESESSIONS_ATTENDEE  WHERE ATTENDEE_ID = :APP_USER 
			
			UNION 
			
			SELECT EVENT_ID FROM EVENTSCHEDULE 
			WHERE 	OWNED_BY =:APP_USER 
					OR (PRESENTOR1 =:APP_USER OR PRESENTOR2 =:APP_USER  OR PRESENTOR3 =:APP_USER OR PRESENTOR4 =:APP_USER OR PRESENTOR_5 =:APP_USER )
					OR (EVENT_VISIBILITY = 'OPEN') 
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ALL')
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_ME' AND OWNED_BY = (SELECT MANAGER_ID  FROM TT_EMPLOYEE WHERE EMP_ID = :APP_USER))
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_DIRECTS' AND OWNED_BY IN (SELECT EMP_ID    FROM TT_EMPLOYEE START WITH EMP_ID= :APPUSERMANAGER CONNECT BY PRIOR  MANAGER_ID=  EMP_ID))
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_AREA' AND  TOWARDS_PLA_AREA = :APPUSERPLAAREA)
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_FAMILY' AND  TOWARDS_PLA_FAMILY = :APPUSERPLAFAMILY)
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_LINE' AND  TOWARDS_PLA_LINE = :APPUSERPLALINE)
	)
	
	
	ORDER BY SCHEDULED_TIME DESC 
	
	
	
  )
  LOOP

     htp.p (


'
<div style="padding-left: 3cm; background-color:#f0f0f0;  z-index: 1; ">
<br><br>
	<div>
		<div class="t-Form--slimPadding">
<div class="t-Form--slimPadding">
<table  width="700">
<tr><td>

			<h4 style="font-family:Helvetica Neue; " > '  || events.EVENT_NAME||  '</h4>
			<p   style="font-size: 90%;" ><i>'|| INITCAP(to_char(events.SCHEDULED_TIME,'MONTH DD, YYYY')) ||
            ' ' || to_char(events.SCHEDULED_TIME,'HH24:MI') || '-' || to_char(events.SCHEDULED_ENDTIME,'HH24:MI')  || '    to    ' || 
            INITCAP(to_char(events.SCHEDULED_ENDTIME,'MONTH DD, YYYY')) ||' ' || to_char(events.SCHEDULED_TIME,'HH24:MI') || '-' 
                               || to_char(events.SCHEDULED_ENDTIME,'HH24:MI') || '</i><p><br>

   </td><tr><tr><td>         
           <div style="width:75%">
              <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;"> Type:</i> <b> '|| events.EVENT_TYPE ||' </b>  <br> <i style="font-size: 90%;"> PlA Family : </i> <b>'|| events.TOWARDS_PLA_FAMILY||'</b> <br> <i style="font-size: 90%;"> Region : </i> <b>'|| events.REGION||'</b> <br><i style="font-size: 90%;"> Status : </i> <b>'|| events.SESSION_STATUS||'</b>    </div> 
              <div style="float: right;"><i style="font-size: 90%; margin: 0 1.5%;"> Mode : </i> <b>'|| events.SESSION_MODE||'</b> <br> <i style="font-size: 90%;"> Pla Area : </i> <b>'|| events.TOWARDS_PLA_AREA||'</b> <br> <i style="font-size: 90%;">Country : </i> <b>'||events.COUNTRY||'</b><br> <i style="font-size: 90%;"> Location : </i> <b>'|| events.LOCATION||'</b> </div>
           </div>
  </td><tr><tr><td>
           		
          
		   
		   <p> <i style="font-size: 90%;"> Description  :</i> <p  style="font-family:Helvetica Neue; width: 70%; text-indent: 20px;">'||  events.DISCRIPTION || '</p>   </p>   

   </td><tr><tr><td>
          
           <p> <i style="font-size: 90%;"> Resource Link  :</i><a href="'||  events.EVENT_RESOURCE_LINK || '" target="_blank"> '|| events.EVENT_RESOURCE_LINK ||'</a> </p> 

   </td><tr><tr><td>         
           <div style="width:75%">
             <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;">  EMP VISBILITY:</i> <b> '|| events.EVENT_VISIBILITY ||' </b>   <br> <i style="font-size: 90%;"> MGR VISBILITY: </i> <b>'|| events.MGR_EVENT_VISIBILITY||'</b> </div> 
            </div>
  </td><tr><tr><td>

</td><tr></table>
           
           </div>
		</div>
	</div>
</div><br>
<br>
');

  END LOOP;

END;

ELSE 

BEGIN
  FOR events IN (
    SELECT "EVENT_NAME", "DISCRIPTION" ,"EVENT_TYPE","EVENT_RESOURCE_LINK","TOWARDS_PLA_FAMILY","TOWARDS_PLA_AREA" ,"OWNED_BY", "SESSION_MODE", "REGION", "COUNTRY","LOCATION","SESSION_STATUS",
    "SCHEDULED_TIME","SCHEDULED_ENDTIME","EVENT_VISIBILITY","MGR_EVENT_VISIBILITY"
	FROM EVENTSCHEDULE  WHERE EVENT_ID  IN (
	
			
			SELECT EVENT_ID FROM EVENTSCHEDULE 
			WHERE 	OWNED_BY =:APP_USER 
					OR (PRESENTOR1 =:APP_USER OR PRESENTOR2 =:APP_USER  OR PRESENTOR3 =:APP_USER OR PRESENTOR4 =:APP_USER OR PRESENTOR_5 =:APP_USER )
					OR (EVENT_VISIBILITY = 'OPEN') 
					OR ( MGR_EVENT_VISIBILITY ='ALL')
                    OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_ME' AND OWNED_BY = :APP_USER)					
					OR ( MGR_EVENT_VISIBILITY ='ONLY_DIRECTS' AND OWNED_BY IN (SELECT EMP_ID    FROM TT_EMPLOYEE START WITH EMP_ID= :APP_USER CONNECT BY PRIOR  MANAGER_ID=  EMP_ID))
					OR ( MGR_EVENT_VISIBILITY ='PLA_AREA' AND  TOWARDS_PLA_AREA    IN ( SELECT regexp_substr ( :APPUSERPLAAREA, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLAAREA, '[^,]+', 1, level ) IS NOT NULL ))
					OR ( MGR_EVENT_VISIBILITY ='PLA_FAMILY' AND  TOWARDS_PLA_FAMILY IN ( SELECT regexp_substr ( :APPUSERPLAFAMILY, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLAFAMILY, '[^,]+', 1, level ) IS NOT NULL ))
					OR ( MGR_EVENT_VISIBILITY ='PLA_LINE' AND  TOWARDS_PLA_LINE IN ( SELECT regexp_substr ( :APPUSERPLALINE, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLALINE, '[^,]+', 1, level ) IS NOT NULL ))
	)
	
	
	ORDER BY SCHEDULED_TIME DESC 
	
	
	
  )
  LOOP

     htp.p (
'<div style="padding-left: 3cm; background-color:#f0f0f0;  z-index: 1; ">
	<div>
		<div class="t-Form--slimPadding">
<div class="t-Form--slimPadding">
<table  width="700">
<tr><td>

			<h4 style="font-family:Helvetica Neue; " > '  || events.EVENT_NAME||  '</h4>
			<p   style="font-size: 90%;" ><i>'|| INITCAP(to_char(events.SCHEDULED_TIME,'MONTH DD, YYYY')) ||
            ' ' || to_char(events.SCHEDULED_TIME,'HH24:MI') || '-' || to_char(events.SCHEDULED_ENDTIME,'HH24:MI')  || '    to    ' || 
            INITCAP(to_char(events.SCHEDULED_ENDTIME,'MONTH DD, YYYY')) ||' ' || to_char(events.SCHEDULED_TIME,'HH24:MI') || '-' 
                               || to_char(events.SCHEDULED_ENDTIME,'HH24:MI') || '</i><p><br>

   </td><tr><tr><td>         
           <div style="width:75%">
              <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;"> Type:</i> <b> '|| events.EVENT_TYPE ||' </b>  <br> <i style="font-size: 90%;"> PlA Family : </i> <b>'|| events.TOWARDS_PLA_FAMILY||'</b> <br> <i style="font-size: 90%;"> Region : </i> <b>'|| events.REGION||'</b> <br><i style="font-size: 90%;"> Status : </i> <b>'|| events.SESSION_STATUS||'</b>    </div> 
              <div style="float: right;"><i style="font-size: 90%; margin: 0 1.5%;"> Mode : </i> <b>'|| events.SESSION_MODE||'</b> <br> <i style="font-size: 90%;"> Pla Area : </i> <b>'|| events.TOWARDS_PLA_AREA||'</b> <br> <i style="font-size: 90%;">Country : </i> <b>'||events.COUNTRY||'</b><br> <i style="font-size: 90%;"> Location : </i> <b>'|| events.LOCATION||'</b> </div>
           </div>
  </td><tr><tr><td>
           		
          
		   
		   <p> <i style="font-size: 90%;"> Description  :</i> <p  style="font-family:Helvetica Neue; width: 70%; text-indent: 20px;">'||  events.DISCRIPTION || '</p>   </p>   

   </td><tr><tr><td>
          
           <p> <i style="font-size: 90%;"> Resource Link  :</i><a href="'||  events.EVENT_RESOURCE_LINK || '" target="_blank"> '|| events.EVENT_RESOURCE_LINK ||'</a> </p> 

   </td><tr><tr><td>         
           <div style="width:75%">
             <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;">  EMP VISBILITY:</i> <b> '|| events.EVENT_VISIBILITY ||' </b>   <br> <i style="font-size: 90%;"> MGR VISBILITY: </i> <b>'|| events.MGR_EVENT_VISIBILITY||'</b> </div> 
            </div>
  </td><tr><tr><td>

</td><tr></table>
           
           </div>
		</div>
	</div>
</div><br>
<br>
'

);
  END LOOP;

END;


END IF ;

END;


































BEGIN
FOR events IN (

                  SELECT EVENT_ID , "TRAINING_NAME", "DISCRIPTION" ,"EVENT_TYPE","EVENT_RESOURCE_LINK","TOWARDS_PLA_FAMILY","TOWARDS_PLA_AREA","TOWARDS_PLA_LINE" ,"OWNED_BY","EVENT_VISIBILITY","MGR_EVENT_VISIBILITY"
					
                  FROM EVENTSCHEDULE WHERE EVENT_ID IN 
					(
                    SELECT EVENT_ID 
                    FROM EVENTSCHEDULE
					WHERE OWNED_BY =:APP_USER 
					OR (PRESENTOR1 =:APP_USER OR PRESENTOR2 =:APP_USER  OR PRESENTOR3 =:APP_USER OR PRESENTOR4 =:APP_USER OR PRESENTOR_5 =:APP_USER )
					OR (EVENT_VISIBILITY = 'OPEN') 
					OR ( :ISAPPUSERMANAGER = 'FALSE' AND EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ALL')
					OR ( :ISAPPUSERMANAGER = 'FALSE' AND EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_ME' AND OWNED_BY =:APPUSERMANAGER )
					OR ( :ISAPPUSERMANAGER = 'FALSE' AND EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_DIRECTS' AND OWNED_BY IN (SELECT EMP_ID    FROM TT_EMPLOYEE START WITH EMP_ID= :APPUSERMANAGER CONNECT BY PRIOR  MANAGER_ID=  EMP_ID))
					OR ( :ISAPPUSERMANAGER = 'FALSE' AND EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_AREA' AND  TOWARDS_PLA_AREA = :APPUSERPLAAREA)
					OR ( :ISAPPUSERMANAGER = 'FALSE' AND EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_FAMILY' AND  TOWARDS_PLA_FAMILY = :APPUSERPLAFAMILY)
					OR ( :ISAPPUSERMANAGER = 'FALSE' AND EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_LINE' AND  TOWARDS_PLA_LINE = :APPUSERPLALINE)
					OR ( :ISAPPUSERMANAGER = 'TRUE' AND MGR_EVENT_VISIBILITY ='ALL')
                    OR ( :ISAPPUSERMANAGER = 'TRUE' AND EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_ME' AND OWNED_BY = :APP_USER)					
					OR ( :ISAPPUSERMANAGER = 'TRUE' AND MGR_EVENT_VISIBILITY ='ONLY_DIRECTS' AND OWNED_BY IN (SELECT EMP_ID    FROM TT_EMPLOYEE START WITH EMP_ID= :APP_USER CONNECT BY PRIOR  MANAGER_ID=  EMP_ID))
					OR ( :ISAPPUSERMANAGER = 'TRUE' AND MGR_EVENT_VISIBILITY ='PLA_AREA' AND  TOWARDS_PLA_AREA    IN ( SELECT regexp_substr ( :APPUSERPLAAREA, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLAAREA, '[^,]+', 1, level ) IS NOT NULL ))
					OR ( :ISAPPUSERMANAGER = 'TRUE' AND MGR_EVENT_VISIBILITY ='PLA_FAMILY' AND  TOWARDS_PLA_FAMILY IN ( SELECT regexp_substr ( :APPUSERPLAFAMILY, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLAFAMILY, '[^,]+', 1, level ) IS NOT NULL ))
					OR ( :ISAPPUSERMANAGER = 'TRUE' AND MGR_EVENT_VISIBILITY ='PLA_LINE' AND  TOWARDS_PLA_LINE IN ( SELECT regexp_substr ( :APPUSERPLALINE, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLALINE, '[^,]+', 1, level ) IS NOT NULL ))


					UNION

					SELECT TRAINING_ID 
					FROM TTESESSIONS_ATTENDEE 
					WHERE :ISAPPUSERMANAGER = 'FALSE' AND ATTENDEE_ID = :APP_USER


                   )
	)
  LOOP        
  
           
		htp.p ('<div style="padding-left: 3cm; background-color:#f0f0f0;  z-index: 1; "><br><br>	
		       <div>		
			   <div class="t-Form--slimPadding">
			   <div class="t-Form--slimPadding">
			   <table  width="700">
			   <tr><td>
			   <h4 style="font-family:Helvetica Neue; " > '  || events.TRAINING_NAME||  '</h4>
			   
			   </td></tr><tr><td>
			   
            
			   
		       <p> <i style="font-size: 90%;"> Description  :</i> <p  style="font-family:Helvetica Neue; width: 70%; text-indent: 20px;">'||  events.DISCRIPTION || '</p>   </p>   
                   
               </td></tr><tr><td>
			  
			   <div style="width:75%">
				  <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;"> Type:</i> <b> '|| events.EVENT_TYPE ||' </b>  <br> <i style="font-size: 90%;"> PlA Family : </i> <b>'|| events.TOWARDS_PLA_FAMILY||'</b> </div> 
				  <div style="float: right;"><i style="font-size: 90%; margin: 0 1.5%;"> PLA Line : </i> <b>'|| events.TOWARDS_PLA_LINE||'</b> <br> <i style="font-size: 90%;"> Pla Area : </i> <b>'|| events.TOWARDS_PLA_AREA||'</b> </div>
			   </div>
	  

              </td></tr> 
			   
			   ');
		   
		   
  
				FOR Session  IN (
				   
					SELECT  "SESSION_MODE", "REGION", "COUNTRY","LOCATION","SESSION_STATUS", "SCHEDULED_TIME","SCHEDULED_ENDTIME","EVENT_VISIBILITY","MGR_EVENT_VISIBILITY"
					 FROM EVENTSCHEDULE  WHERE EVENT_ID  = events.EVENT_ID
				   
				   )
				   
				   LOOP
				   
				   htp.p('
				   <tr><td>
				   <p   style="font-size: 90%;" ><i>'|| INITCAP(to_char(Session.SCHEDULED_TIME,'MONTH DD, YYYY')) ||
					' ' || to_char(Session.SCHEDULED_TIME,'HH24:MI') || '-' || to_char(Session.SCHEDULED_ENDTIME,'HH24:MI')  || '    to    ' || 
					INITCAP(to_char(Session.SCHEDULED_ENDTIME,'MONTH DD, YYYY')) ||' ' || to_char(Session.SCHEDULED_TIME,'HH24:MI') || '-' 
									   || to_char(Session.SCHEDULED_ENDTIME,'HH24:MI') || '</i>  <i style="font-size: 90%;"> Status : </i> <b>'|| Session.SESSION_STATUS||'</b>   <p><br>

				   </td></tr>
				   <tr><td>         
						   <div style="width:75%">
							  <div style="float: left;"><i style="font-size: 90%;"> Region : </i> <b>'|| Session.REGION||'</b> <br> <i style="font-size: 90%;"> Location : </i> <b>'|| Session.LOCATION||'</b> </div> 
							  <div style="float: right;"><i style="font-size: 90%; margin: 0 1.5%;"> Mode : </i> <b>'|| Session.SESSION_MODE||'</b> <br> <i style="font-size: 90%;">Country : </i> <b>'|| Session.COUNTRY ||'</b></div>
						   </div>
				  </td></tr>'  
				  );
  
                END LOOP;
				
			htp.p(' <tr><td> <p> <i style="font-size: 90%;"> Resource Link  :</i><a href="'||  events.EVENT_RESOURCE_LINK || '" target="_blank"> '|| events.EVENT_RESOURCE_LINK ||'</a> </p>  </td></tr>  </table>
           
           </div>
		</div>
	</div>
</div><br>
<br>');


END LOOP;

END;




























=======================================================
















DECLARE 
isUserManager varchar(32767);
isUserAdmin varchar(32767);
userManagerId varchar(32767);
userFamily  varchar(32767);
userArea varchar(32767);
userLine varchar(32767);
RESULT varchar(32767);

BEGIN


BEGIN
  SELECT 'TRUE' INTO isUserManager
    FROM TTE_MANAGER_PROFILE
    WHERE MANAGER_ID = :APP_USER;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    isUserManager := 'FALSE';
END;



BEGIN 
      SELECT 'TRUE'  INTO isUserAdmin
        FROM APEX_ACCESS_CONTROL
        WHERE ADMIN_USERNAME = :APP_USER AND  ADMIN_PRIVILEGES ='ADMIN';
EXCEPTION 
   WHEN NO_DATA_FOUND THEN 
    isUserAdmin := 'FALSE';
END;

:ISAPPUSERADMIN := isUserAdmin;



if isUserManager = 'FALSE'
then 

BEGIN

SELECT MANAGER_ID INTO  userManagerId FROM TT_EMPLOYEE WHERE EMP_ID = :APP_USER;

SELECT PLA_FAMILY,PLA_AREA, PLA_LINE INTO userFamily,userArea,userLine 
FROM TTE_MANAGER_PROFILE
WHERE MANAGER_ID IN (SELECT MANAGER_ID FROM TT_EMPLOYEE WHERE EMP_ID = :APP_USER );

EXCEPTION
   WHEN NO_DATA_FOUND THEN
    userFamily := '';
	userArea := '';
	userLine := '';
	userManagerId := '';
END;


else 

FOR employee_rec IN (
        SELECT PLA_FAMILY,PLA_AREA, PLA_LINE 
          FROM TTE_MANAGER_PROFILE WHERE MANAGER_ID IN (

				SELECT EMP_ID 
				 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				 FROM TT_EMPLOYEE
				 START WITH EMP_ID=  :APP_USER
				 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
				 ) 
				 WHERE LEAF= 0
			)
	   )
   LOOP

      userFamily := employee_rec.PLA_FAMILY|| ','||userFamily ;
      userArea := employee_rec.PLA_AREA|| ',' ||userArea ;
      userline := employee_rec.PLA_LINE || ',' || userline ;

   END LOOP;

end if;

DBMS_OUTPUT.PUT_LINE('is User Manager' || isUserManager );
:ISAPPUSERMANAGER := isUserManager;

Begin
 SELECT listagg ( names , ',' ) within GROUP (ORDER BY rn )
   INTO RESULT 
   FROM
  (
         SELECT level rn,
                regexp_substr ( userArea , '[^,]+', 1, level ) names,
                row_number ( ) over ( partition BY regexp_substr ( userArea , '[^,]+', 1, level ) order by level ) rnn
           FROM dual
          CONNECT BY regexp_substr ( userArea , '[^,]+', 1, level ) IS NOT NULL
  )
  WHERE rnn = 1;
--Dbms_Output.Put_Line('PLA Area: ' || RESULT );

:APPUSERPLAAREA := RESULT;
end;


Begin
 SELECT listagg ( names , ',' ) within GROUP (ORDER BY rn )
   INTO RESULT 
   FROM
  (
         SELECT level rn,
                regexp_substr ( userFamily , '[^,]+', 1, level ) names,
                row_number ( ) over ( partition BY regexp_substr ( userFamily , '[^,]+', 1, level ) order by level ) rnn
           FROM dual
          CONNECT BY regexp_substr ( userFamily , '[^,]+', 1, level ) IS NOT NULL
  )
  WHERE rnn = 1;
Dbms_Output.Put_Line('PLA Family: ' || RESULT );
:APPUSERPLAFAMILY := RESULT;

end;

Begin
 SELECT listagg ( names , ',' ) within GROUP (ORDER BY rn )
   INTO RESULT 
   FROM
  (
         SELECT level rn,
                regexp_substr ( userLine , '[^,]+', 1, level ) names,
                row_number ( ) over ( partition BY regexp_substr ( userLine , '[^,]+', 1, level ) order by level ) rnn
           FROM dual
          CONNECT BY regexp_substr ( userLine , '[^,]+', 1, level ) IS NOT NULL
  )
  WHERE rnn = 1;
Dbms_Output.Put_Line('PLA Line: ' || RESULT );
:APPUSERPLALINE := RESULT;
:APPUSERMANAGER := userManagerId;


end;

END;




=======================================
DECLARE 

isUserManager varchar(50);
isUserAdmin varchar(50);
userManagerId varchar(60);
userFamily  varchar(500);
userArea varchar(500);
userLine varchar(500);
RESULT varchar(500);

BEGIN


BEGIN
  SELECT 'TRUE' INTO isUserManager
    FROM TTE_MANAGER_PROFILE
    WHERE MANAGER_ID = :APP_USER;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    isUserManager := 'FALSE';
END;



BEGIN 
      SELECT 'TRUE'  INTO isUserAdmin
        FROM APEX_ACCESS_CONTROL
        WHERE ADMIN_USERNAME = :APP_USER AND  ADMIN_PRIVILEGES ='ADMIN';
EXCEPTION 
   WHEN NO_DATA_FOUND THEN 
    isUserAdmin := 'FALSE';
END;

:ISAPPUSERADMIN := isUserAdmin;



if isUserManager = 'FALSE'
then 

BEGIN

SELECT MANAGER_ID INTO  userManagerId FROM TT_EMPLOYEE WHERE EMP_ID = :APP_USER;

SELECT PLA_FAMILY,PLA_AREA, PLA_LINE INTO userFamily,userArea,userLine 
FROM TTE_MANAGER_PROFILE
WHERE MANAGER_ID IN (SELECT MANAGER_ID FROM TT_EMPLOYEE WHERE EMP_ID = :APP_USER );

EXCEPTION
   WHEN NO_DATA_FOUND THEN
    userFamily := '';
	userArea := '';
	userLine := '';
	userManagerId := '';
END;


else 

FOR employee_rec IN (
        SELECT PLA_FAMILY,PLA_AREA, PLA_LINE 
          FROM TTE_MANAGER_PROFILE WHERE MANAGER_ID IN (

				SELECT EMP_ID 
				 FROM (SELECT EMP_ID,MANAGER_ID, CONNECT_BY_ISLEAF AS LEAF
				 FROM TT_EMPLOYEE
				 START WITH EMP_ID=  :APP_USER
				 CONNECT BY MANAGER_ID= PRIOR EMP_ID 
				 ) 
				 WHERE LEAF= 0
			)
	   )
   LOOP

      userFamily := employee_rec.PLA_FAMILY|| ','||userFamily ;
      userArea := employee_rec.PLA_AREA|| ',' ||userArea ;
      userline := employee_rec.PLA_LINE || ',' || userline ;

   END LOOP;

end if;

--DBMS_OUTPUT.PUT_LINE('is User Manager' || isUserManager );
:ISAPPUSERMANAGER := isUserManager;

Begin
 SELECT listagg ( names , ',' ) within GROUP (ORDER BY rn )
   INTO RESULT 
   FROM
  (
         SELECT level rn,
                regexp_substr ( userArea , '[^,]+', 1, level ) names,
                row_number ( ) over ( partition BY regexp_substr ( userArea , '[^,]+', 1, level ) order by level ) rnn
           FROM dual
          CONNECT BY regexp_substr ( userArea , '[^,]+', 1, level ) IS NOT NULL
  )
  WHERE rnn = 1;
--Dbms_Output.Put_Line('PLA Area: ' || RESULT );

:APPUSERPLAAREA := RESULT;
end;


Begin
 SELECT listagg ( names , ',' ) within GROUP (ORDER BY rn )
   INTO RESULT 
   FROM
  (
         SELECT level rn,
                regexp_substr ( userFamily , '[^,]+', 1, level ) names,
                row_number ( ) over ( partition BY regexp_substr ( userFamily , '[^,]+', 1, level ) order by level ) rnn
           FROM dual
          CONNECT BY regexp_substr ( userFamily , '[^,]+', 1, level ) IS NOT NULL
  )
  WHERE rnn = 1;
--Dbms_Output.Put_Line('PLA Family: ' || RESULT );
:APPUSERPLAFAMILY := RESULT;

end;

Begin
 SELECT listagg ( names , ',' ) within GROUP (ORDER BY rn )
   INTO RESULT 
   FROM
  (
         SELECT level rn,
                regexp_substr ( userLine , '[^,]+', 1, level ) names,
                row_number ( ) over ( partition BY regexp_substr ( userLine , '[^,]+', 1, level ) order by level ) rnn
           FROM dual
          CONNECT BY regexp_substr ( userLine , '[^,]+', 1, level ) IS NOT NULL
  )
  WHERE rnn = 1;
--Dbms_Output.Put_Line('PLA Line: ' || RESULT );
:APPUSERPLALINE := RESULT;
:APPUSERMANAGER := userManagerId;


end;

END;






=======================



BEGIN
 
 
 
 
 IF  :ISAPPUSERMANAGER = 'FALSE' 
 THEN
 
 BEGIN
  FOR events IN (
    SELECT "EVENT_NAME", "DISCRIPTION" ,"EVENT_TYPE","EVENT_RESOURCE_LINK","TOWARDS_PLA_FAMILY","TOWARDS_PLA_AREA" ,"OWNED_BY", "SESSION_MODE", "REGION", "COUNTRY","LOCATION","SESSION_STATUS",
    "SCHEDULED_TIME","SCHEDULED_ENDTIME","EVENT_VISIBILITY","MGR_EVENT_VISIBILITY"
	FROM EVENTSCHEDULE  WHERE EVENT_ID  IN (
	
			SELECT TRAINING_ID  FROM TTESESSIONS_ATTENDEE  WHERE ATTENDEE_ID = :APP_USER 
			
			UNION 
			
			SELECT EVENT_ID FROM EVENTSCHEDULE 
			WHERE 	OWNED_BY =:APP_USER 
					OR (PRESENTOR1 =:APP_USER OR PRESENTOR2 =:APP_USER  OR PRESENTOR3 =:APP_USER OR PRESENTOR4 =:APP_USER OR PRESENTOR_5 =:APP_USER )
					OR (EVENT_VISIBILITY = 'OPEN') 
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ALL')
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_ME' AND OWNED_BY = (SELECT MANAGER_ID  FROM TT_EMPLOYEE WHERE EMP_ID = :APP_USER))
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_DIRECTS' AND OWNED_BY IN (SELECT EMP_ID    FROM TT_EMPLOYEE START WITH EMP_ID= :APPUSERMANAGER CONNECT BY PRIOR  MANAGER_ID=  EMP_ID))
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_AREA' AND  TOWARDS_PLA_AREA = :APPUSERPLAAREA)
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_FAMILY' AND  TOWARDS_PLA_FAMILY = :APPUSERPLAFAMILY)
					OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='PLA_LINE' AND  TOWARDS_PLA_LINE = :APPUSERPLALINE)
	)
	
	
	ORDER BY SCHEDULED_TIME DESC 
	
	
	
  )
  LOOP

     htp.p (


'
<div style="padding-left: 3cm; background-color:#f0f0f0;  z-index: 1; ">
<br><br>
	<div>
		<div class="t-Form--slimPadding">
<div class="t-Form--slimPadding">
<table  width="700">
<tr><td>

			<h4 style="font-family:Helvetica Neue; " > '  || events.EVENT_NAME||  '</h4>
			<p   style="font-size: 90%;" ><i>'|| INITCAP(to_char(events.SCHEDULED_TIME,'MONTH DD, YYYY')) ||
            ' ' || to_char(events.SCHEDULED_TIME,'HH24:MI') || '-' || to_char(events.SCHEDULED_ENDTIME,'HH24:MI')  || '    to    ' || 
            INITCAP(to_char(events.SCHEDULED_ENDTIME,'MONTH DD, YYYY')) ||' ' || to_char(events.SCHEDULED_TIME,'HH24:MI') || '-' 
                               || to_char(events.SCHEDULED_ENDTIME,'HH24:MI') || '</i><p><br>

   </td><tr><tr><td>         
           <div style="width:75%">
              <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;"> Type:</i> <b> '|| events.EVENT_TYPE ||' </b>  <br> <i style="font-size: 90%;"> PlA Family : </i> <b>'|| events.TOWARDS_PLA_FAMILY||'</b> <br> <i style="font-size: 90%;"> Region : </i> <b>'|| events.REGION||'</b> <br><i style="font-size: 90%;"> Status : </i> <b>'|| events.SESSION_STATUS||'</b>    </div> 
              <div style="float: right;"><i style="font-size: 90%; margin: 0 1.5%;"> Mode : </i> <b>'|| events.SESSION_MODE||'</b> <br> <i style="font-size: 90%;"> Pla Area : </i> <b>'|| events.TOWARDS_PLA_AREA||'</b> <br> <i style="font-size: 90%;">Country : </i> <b>'||events.COUNTRY||'</b><br> <i style="font-size: 90%;"> Location : </i> <b>'|| events.LOCATION||'</b> </div>
           </div>
  </td><tr><tr><td>
           		
          
		   
		   <p> <i style="font-size: 90%;"> Description  :</i> <p  style="font-family:Helvetica Neue; width: 70%; text-indent: 20px;">'||  events.DISCRIPTION || '</p>   </p>   

   </td><tr><tr><td>
          
           <p> <i style="font-size: 90%;"> Resource Link  :</i><a href="'||  events.EVENT_RESOURCE_LINK || '" target="_blank"> '|| events.EVENT_RESOURCE_LINK ||'</a> </p> 

   </td><tr><tr><td>         
           <div style="width:75%">
             <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;">  EMP VISBILITY:</i> <b> '|| events.EVENT_VISIBILITY ||' </b>   <br> <i style="font-size: 90%;"> MGR VISBILITY: </i> <b>'|| events.MGR_EVENT_VISIBILITY||'</b> </div> 
            </div>
  </td><tr><tr><td>

</td><tr></table>
           
           </div>
		</div>
	</div>
</div><br>
<br>
');

  END LOOP;

END;

ELSE 

BEGIN
  FOR events IN (
    SELECT "EVENT_NAME", "DISCRIPTION" ,"EVENT_TYPE","EVENT_RESOURCE_LINK","TOWARDS_PLA_FAMILY","TOWARDS_PLA_AREA" ,"OWNED_BY", "SESSION_MODE", "REGION", "COUNTRY","LOCATION","SESSION_STATUS",
    "SCHEDULED_TIME","SCHEDULED_ENDTIME","EVENT_VISIBILITY","MGR_EVENT_VISIBILITY"
	FROM EVENTSCHEDULE  WHERE EVENT_ID  IN (
	
			
			SELECT EVENT_ID FROM EVENTSCHEDULE 
			WHERE 	OWNED_BY =:APP_USER 
					OR (PRESENTOR1 =:APP_USER OR PRESENTOR2 =:APP_USER  OR PRESENTOR3 =:APP_USER OR PRESENTOR4 =:APP_USER OR PRESENTOR_5 =:APP_USER )
					OR (EVENT_VISIBILITY = 'OPEN') 
					OR ( MGR_EVENT_VISIBILITY ='ALL')
                    OR (EVENT_VISIBILITY = 'SELECTED'  AND MGR_EVENT_VISIBILITY ='ONLY_ME' AND OWNED_BY = :APP_USER)					
					OR ( MGR_EVENT_VISIBILITY ='ONLY_DIRECTS' AND OWNED_BY IN (SELECT EMP_ID    FROM TT_EMPLOYEE START WITH EMP_ID= :APP_USER CONNECT BY PRIOR  MANAGER_ID=  EMP_ID))
					OR ( MGR_EVENT_VISIBILITY ='PLA_AREA' AND  TOWARDS_PLA_AREA    IN ( SELECT regexp_substr ( :APPUSERPLAAREA, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLAAREA, '[^,]+', 1, level ) IS NOT NULL ))
					OR ( MGR_EVENT_VISIBILITY ='PLA_FAMILY' AND  TOWARDS_PLA_FAMILY IN ( SELECT regexp_substr ( :APPUSERPLAFAMILY, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLAFAMILY, '[^,]+', 1, level ) IS NOT NULL ))
					OR ( MGR_EVENT_VISIBILITY ='PLA_LINE' AND  TOWARDS_PLA_LINE IN ( SELECT regexp_substr ( :APPUSERPLALINE, '[^,]+', 1, level ) names FROM DUAL CONNECT BY regexp_substr ( :APPUSERPLALINE, '[^,]+', 1, level ) IS NOT NULL ))
	)
	
	
	ORDER BY SCHEDULED_TIME DESC 
	
	
	
  )
  LOOP

     htp.p (
'<div style="padding-left: 3cm; background-color:#f0f0f0;  z-index: 1; ">
	<div>
		<div class="t-Form--slimPadding">
<div class="t-Form--slimPadding">
<table  width="700">
<tr><td>

			<h4 style="font-family:Helvetica Neue; " > '  || events.EVENT_NAME||  '</h4>
			<p   style="font-size: 90%;" ><i>'|| INITCAP(to_char(events.SCHEDULED_TIME,'MONTH DD, YYYY')) ||
            ' ' || to_char(events.SCHEDULED_TIME,'HH24:MI') || '-' || to_char(events.SCHEDULED_ENDTIME,'HH24:MI')  || '    to    ' || 
            INITCAP(to_char(events.SCHEDULED_ENDTIME,'MONTH DD, YYYY')) ||' ' || to_char(events.SCHEDULED_TIME,'HH24:MI') || '-' 
                               || to_char(events.SCHEDULED_ENDTIME,'HH24:MI') || '</i><p><br>

   </td><tr><tr><td>         
           <div style="width:75%">
              <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;"> Type:</i> <b> '|| events.EVENT_TYPE ||' </b>  <br> <i style="font-size: 90%;"> PlA Family : </i> <b>'|| events.TOWARDS_PLA_FAMILY||'</b> <br> <i style="font-size: 90%;"> Region : </i> <b>'|| events.REGION||'</b> <br><i style="font-size: 90%;"> Status : </i> <b>'|| events.SESSION_STATUS||'</b>    </div> 
              <div style="float: right;"><i style="font-size: 90%; margin: 0 1.5%;"> Mode : </i> <b>'|| events.SESSION_MODE||'</b> <br> <i style="font-size: 90%;"> Pla Area : </i> <b>'|| events.TOWARDS_PLA_AREA||'</b> <br> <i style="font-size: 90%;">Country : </i> <b>'||events.COUNTRY||'</b><br> <i style="font-size: 90%;"> Location : </i> <b>'|| events.LOCATION||'</b> </div>
           </div>
  </td><tr><tr><td>
           		
          
		   
		   <p> <i style="font-size: 90%;"> Description  :</i> <p  style="font-family:Helvetica Neue; width: 70%; text-indent: 20px;">'||  events.DISCRIPTION || '</p>   </p>   

   </td><tr><tr><td>
          
           <p> <i style="font-size: 90%;"> Resource Link  :</i><a href="'||  events.EVENT_RESOURCE_LINK || '" target="_blank"> '|| events.EVENT_RESOURCE_LINK ||'</a> </p> 

   </td><tr><tr><td>         
           <div style="width:75%">
             <div style="float: left;"><i style="font-size: 90%; margin: 0 1.5%;">  EMP VISBILITY:</i> <b> '|| events.EVENT_VISIBILITY ||' </b>   <br> <i style="font-size: 90%;"> MGR VISBILITY: </i> <b>'|| events.MGR_EVENT_VISIBILITY||'</b> </div> 
            </div>
  </td><tr><tr><td>

</td><tr></table>
           
           </div>
		</div>
	</div>
</div><br>
<br>
'

);
  END LOOP;

END;


END IF ;

END;